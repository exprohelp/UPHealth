//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UPHealth.diagProxy {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://exprohelp.com/", ConfigurationName="diagProxy.Diagnostic_CS_WebServiceSoap")]
    public interface Diagnostic_CS_WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_into_registrationByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_into_registrationByUnit(out string processInfo, string batch_No, string Parent_Id, string Patient_Id, string pt_name, int Age, string age_Type, string Sex, string Ref_id, string ref_Name, string TestCode, string Samp_Coll_Date, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Speciality_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Speciality_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_BySpeciality", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_BySpeciality(
                    string unit_id, 
                    string client_id, 
                    string Patient_Id, 
                    string pt_name, 
                    int Age, 
                    string age_Type, 
                    string Sex, 
                    string mobile_no, 
                    string Ref_id, 
                    string ref_Name, 
                    string TestCode, 
                    string Samp_Coll_Date, 
                    int totalcost, 
                    int rebate, 
                    int net, 
                    string remark, 
                    string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Unit_LocalLinkTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Unit_LocalLinkTest(out string processInfo, string main_unit, string i_code, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_BySpecialityRepeat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_BySpecialityRepeat(string unit_id, string Master_Id, int totalcost, int rebate, int net, string TestCode, string remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_ByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_ByUnit(
                    string batch_No, 
                    string unit_id, 
                    string Patient_Id, 
                    string pt_name, 
                    int Age, 
                    string age_Type, 
                    string Sex, 
                    string Ref_id, 
                    string ref_Name, 
                    string mobile_no, 
                    string TestCode, 
                    string Samp_Coll_Date, 
                    int totalcost, 
                    int rebate, 
                    int net, 
                    string remark, 
                    string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Cancel_SpecialityRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Cancel_SpecialityRegistration(string unit_id, string reg_no, string TestCode, string remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Cont_ratesTemp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Cont_ratesTemp(string unit_id, string client_id, string I_CODE, int cont_rate, string Logic, string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UploadPdfDocument_Speciality", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.UploadPdfDocument_SpecialityResponse UploadPdfDocument_Speciality(UPHealth.diagProxy.UploadPdfDocument_SpecialityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/LIS_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LIS_Queries(out string processInfo, string machine_id, string patient_id, string i_code, string date, int prm_2, string logic, string read_1, string unit_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MOB_SalesQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MOB_SalesQueries(out string processInfo, string emp_code, string d_code, string prm_1, string prm_2, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetCard_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCard_Queries(out string processInfo, string LabCode, string card_no, string mobile, string prm_1, string prm_2, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReplaceCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReplaceCard(string old_card_no, string new_card_no, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Card_Info_insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Card_Info_insert(UPHealth.diagProxy.CustomerCard ccobj, string dbname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetACardInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetACardInfo(string Card_No);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetACardInfoByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetACardInfoByUnit(string Card_No, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetACardStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetACardStatus(string Card_No, string unit_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/HealthCardActivationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HealthCardActivationRequest(string Card_No);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ActivateCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ActivateCard(string ActivationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ActivateHealthCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActivateHealthCard(string unit_id, string login_id, string Card_No);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsCurrentSale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsCurrentSale(string unit_id, decimal TotalCost, decimal Rebate, decimal Received, System.DateTime sale_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsCurrentSaleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsCurrentSaleInfo(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetUpdationInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUpdationInfo(string login_id, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetServerDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServerDateTime();
        
        // CODEGEN: Parameter 'GetAuditReportResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetAuditReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GetAuditReportResponse GetAuditReport(UPHealth.diagProxy.GetAuditReportRequest request);
        
        // CODEGEN: Parameter 'GetAuditReportByAuditIdResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetAuditReportByAuditId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GetAuditReportByAuditIdResponse GetAuditReportByAuditId(UPHealth.diagProxy.GetAuditReportByAuditIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QueryExecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryExecute(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetQueryResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetQueryResult(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetStateList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStateList(string Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetDistrictList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDistrictList(string Country, string State_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendSMS(string Message, string MobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSqlScriptofStoredProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSqlScriptofStoredProcedure(string unit_id, string login_id, string DatabaseName, string sp_name);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.TransferDocumentsResponse TransferDocuments(UPHealth.diagProxy.TransferDocumentsRequest request);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UploadPdfDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.UploadPdfDocumentResponse UploadPdfDocument(UPHealth.diagProxy.UploadPdfDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CheckUpdates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUpdates(string unit_id, string UpdatesInfo, string LastUpdate, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InterUnitCashTrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InterUnitCashTrf(string from_unit, string to_unit, decimal amount, string remarks, string unitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetInterUnitCashTrfRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInterUnitCashTrfRecord(out string processInfo, string unit_id, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetUnitToInterUnitCashTrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUnitToInterUnitCashTrf(out string processInfo, string unit_id, string division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VD_PaymentReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VD_PaymentReport(out string processInfo, string unit_id, string d_name, string from, string to, string paid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertVisit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertVisit(out string processInfo, string emp_code, string ref_code, string info, string sch_id, string sch_info, string Next_Sch_Date, string result, string refFeedBack, string vType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/visitingDrInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet visitingDrInfo(out string processInfo, string unit_id, string logic, string i_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsCen_visitingDrFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsCen_visitingDrFee(out string processInfo, string unit_id, string patient_id, string ref_name, int Fees, string i_code, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Pay_CenVisitingDrFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Pay_CenVisitingDrFee(out string processInfo, string master_unit, string ref_name, int amount, string from, string to, string login_id, string patientStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_visitingDr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string App_visitingDr(string unit_id, string logic, string i_code, string app_name, int app_fees, string app_timings, string app_contract, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VisitEntry_SMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VisitEntry_SMS(string visitorId, string pt_name, string pt_contact_no, string visit_date, string visit_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/HomeVisit_Messages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HomeVisit_Messages(string unit_id, string visitorId, string VisitId, string pt_name, string pt_contact_no, string visit_date, string visit_time, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Visit_RelatedQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Visit_RelatedQueries(out string processInfo, string emp_code, string prm_1, string prm_2, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_VisitInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_VisitInfo(out string processInfo, string sch_id, string emp_code, string ref_code, string sch_date, string remarks, string logic);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/createNewJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.createNewJobResponse createNewJob(UPHealth.diagProxy.createNewJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CalculateOldMonthlyPF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateOldMonthlyPF(out string processInfo, string d_code, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SendDailyIncForApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendDailyIncForApproval(out string processInfo, string ref_code, string patient_id, decimal total, decimal rebate, decimal received, string test_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReCalculateDailyPf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="processInfo")]
        string ReCalculateDailyPf(string patient_id, string test_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/PFCalculatedList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PFCalculatedList(out string processInfo, string logic, string unit_id, string ref_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CalculateMonthlyPF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateMonthlyPF(out string processInfo, string d_code, string mthInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SalesSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SalesSummary(string comp_id, string f_date, string l_date, string Business);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetLabRateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabRateInfo(out string processInfo, string i_code, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetCourierInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCourierInfo(out string processInfo, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetRefLabReportInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRefLabReportInfo(out string processInfo, string unit_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RegisterPatientofInterUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegisterPatientofInterUnit(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RegisterPatientByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegisterPatientByUnit(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SyncData_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SyncData_Queries(out string processInfo, string unit_id, string logic, string table_name, string from, string to, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ServiceCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QueriesFromeDiagnostic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueriesFromeDiagnostic(out string processInfo, string logic, string master_unit_id, string unit_id, string searchString, string prm_1, string prm_2, string prm_3, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InformToeDiagnostic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InformToeDiagnostic_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InformToeDiagnostic_New(out string processInfo, string unit_id, string prm_1, int prm_2, string prm_3, string logic);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_LoginlegalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_LoginlegalInfoResponse GC_LoginlegalInfo(UPHealth.diagProxy.GC_LoginlegalInfoRequest request);
        
        // CODEGEN: Parameter 'gc_SalaryChartResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/gc_SalaryChart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.gc_SalaryChartResponse gc_SalaryChart(UPHealth.diagProxy.gc_SalaryChartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportContractDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportContractDetail(out string processInfo, string d_code, string key, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportApprovedRateList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportApprovedRateList(out string processInfo, string cont_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetContRateList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetContRateList(out string processInfo, string cont_name, string cont_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportRebateApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportRebateApproval(out string processInfo, string unit_id, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Rebate_ApprovalQuerries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rebate_ApprovalQuerries(out string processInfo, string unit_id, string from, string to, string prm_1, string Logic);
        
        // CODEGEN: Parameter 'GetSalaryChartResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalaryChart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GetSalaryChartResponse GetSalaryChart(UPHealth.diagProxy.GetSalaryChartRequest request);
        
        // CODEGEN: Parameter 'GetIncreamentLetterResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetIncreamentLetter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GetIncreamentLetterResponse GetIncreamentLetter(UPHealth.diagProxy.GetIncreamentLetterRequest request);
        
        // CODEGEN: Parameter 'GC_RegisterForFinesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_RegisterForFines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_RegisterForFinesResponse GC_RegisterForFines(UPHealth.diagProxy.GC_RegisterForFinesRequest request);
        
        // CODEGEN: Parameter 'GC_RegisterForDeductionResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_RegisterForDeduction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_RegisterForDeductionResponse GC_RegisterForDeduction(UPHealth.diagProxy.GC_RegisterForDeductionRequest request);
        
        // CODEGEN: Parameter 'GC_OverTimeRegisterResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_OverTimeRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_OverTimeRegisterResponse GC_OverTimeRegister(UPHealth.diagProxy.GC_OverTimeRegisterRequest request);
        
        // CODEGEN: Parameter 'GC_WeekdayoffResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_Weekdayoff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_WeekdayoffResponse GC_Weekdayoff(UPHealth.diagProxy.GC_WeekdayoffRequest request);
        
        // CODEGEN: Parameter 'GC_FormDRemunRuleResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_FormDRemunRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_FormDRemunRuleResponse GC_FormDRemunRule(UPHealth.diagProxy.GC_FormDRemunRuleRequest request);
        
        // CODEGEN: Parameter 'GC_NoticeOfChangesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_NoticeOfChanges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_NoticeOfChangesResponse GC_NoticeOfChanges(UPHealth.diagProxy.GC_NoticeOfChangesRequest request);
        
        // CODEGEN: Parameter 'GC_NoticeOfChangesOfOtherStatesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_NoticeOfChangesOfOtherStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesResponse GC_NoticeOfChangesOfOtherStates(UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesRequest request);
        
        // CODEGEN: Parameter 'GC_DamageOrLossResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_DamageOrLoss", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_DamageOrLossResponse GC_DamageOrLoss(UPHealth.diagProxy.GC_DamageOrLossRequest request);
        
        // CODEGEN: Parameter 'GC_AnualReturnResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_AnualReturn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_AnualReturnResponse GC_AnualReturn(UPHealth.diagProxy.GC_AnualReturnRequest request);
        
        // CODEGEN: Parameter 'GC_AttendenceRegisterOfUnitResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_AttendenceRegisterOfUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_AttendenceRegisterOfUnitResponse GC_AttendenceRegisterOfUnit(UPHealth.diagProxy.GC_AttendenceRegisterOfUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GenerateBillingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateBillingData(out string processInfo, string comp_code, string ref_code, string d_from, string d_to, string login_id, string pay_mode, string remark, string logic, string Bill_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Pay_BalaceBill", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Pay_BalaceBill(string bill_no, string pay_mode, string pay_by, string remark, string UnTickPtIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/BillPaymentChecking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BillPaymentChecking(out string processInfo, string unit_id, string ref_by, string dFrom, string dTo, string checkbill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetRecivableRefList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRecivableRefList(out string processInfo, string emp_code, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/BillingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BillingInfo(out string processInfo, string BillId, string Patient_id, string unit_id, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AuthenticateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CGHS_DocInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.CGHS_DocInsertResponse CGHS_DocInsert(UPHealth.diagProxy.CGHS_DocInsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QuestAuditAnswerIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QuestAuditAnswerIns(out string processInfo, string auditId, string unit_id, int HeadId, int Qno, string status_flag, string audit_remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QuestAuditAnswerInsWithRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QuestAuditAnswerInsWithRating(out string processInfo, string auditId, string unit_id, int HeadId, int Qno, int rating, string status_flag, string audit_remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SampleTracking_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SampleTracking_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Report_CrossCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Report_CrossCheck(string Logic, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSamplTrfSheetNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSamplTrfSheetNo(out string processInfo, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/IssueProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IssueProduct(string master_key, int qty, string unit_id, string mfdId, string allotedto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateOrderInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderInfo(string unit_id, string Item_id, string login_id, string pack_size, decimal pack_qty, decimal Qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetUnitUpdationRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUnitUpdationRecord(string unit_id, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Get_salesExeProDet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Get_salesExeProDet(out string processInfo, string empCode, string dFrom, string dTo, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SalesReport_01", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SalesReport_01(out string processInfo, string emp_code, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalesDetailForVP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSalesDetailForVP(out string processInfo, string unit_id, string empCode, string dFrom, string dTo, string ref_code, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Add_RefMultiLocality", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Add_RefMultiLocality(string ref_code, string Ref_locality, string address, string prm_1, string loginid, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_MeetingWithParty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_MeetingWithParty(out string processInfo, int auto_id, string emp_code, string party_name, string contact_no, string remark, string call_for, string call_type, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_DiagContractApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_DiagContractApproval(string ref_code, string i_code, int app_rate, string cont_from, string cont_to, string app_flag, string logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SM_StatusBoard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SM_StatusBoard(out string processInfo, string logn_id, string date, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_DiagTemporaryContract", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_DiagTemporaryContract(string unit_id, string client_id, string I_CODE, int cont_rate, string Logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReferralRequestToModifyOrNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReferralRequestToModifyOrNew(
                    string d_code, 
                    string dname, 
                    string degree, 
                    string SPECIALITY, 
                    string D_O_B, 
                    string MRG_ANV, 
                    string c_name, 
                    string c_address, 
                    string c_landmark, 
                    string c_locality, 
                    string State, 
                    string c_city, 
                    string c_phone, 
                    string Mobile_No, 
                    string emp_code, 
                    decimal potential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Disttribute_MonthlyBySalesExecutive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Disttribute_MonthlyBySalesExecutive(string d_code, string dflag, string dFlagBy, string mobile_no, string for_month, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Disttribute_DailyBySalesExecutive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Disttribute_DailyBySalesExecutive(string d_code, string dflag, string dFlagBy, string mobile_no, string date, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateModifySpecialityAndDegree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateModifySpecialityAndDegree(string sp_code, string sp_name, string test_code, string logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertDoctorDegree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertDoctorDegree(string code, string ref_degree, string login_id, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetReffralInfobyDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReffralInfobyDate(string from_date, string to_date, string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/doctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet doctor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CorrectLocalReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CorrectLocalReferral(out string processInfo, string login_id, string unit_id, string refStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetRefAndLedgerToSync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRefAndLedgerToSync(out string processInfo, string login_id, string unit_id, string logic, string strchar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Referral_Queries_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Referral_Queries_New(out string processInfo, string login_id, string emp_code, string prm_1, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/BranchDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BranchDetail(out string processInfo, string from, string to, string prm1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DayBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DayBook(string unit_id, string date, string daybookcode, string oprator, string computer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalesDataForVP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSalesDataForVP(out string processInfo, string login_id, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DiagnosticSales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DiagnosticSales(string dtFrom, string dtTo, string Business);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GlobalUnitSales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GlobalUnitSales(string mUnit_id, string cMth, string dFrom, string dTo);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertRadiologyBMDECGImages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.InsertRadiologyBMDECGImagesResponse InsertRadiologyBMDECGImages(UPHealth.diagProxy.InsertRadiologyBMDECGImagesRequest request);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/tr_RadiologyRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.tr_RadiologyRegistrationResponse tr_RadiologyRegistration(UPHealth.diagProxy.tr_RadiologyRegistrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/tr_getPatientId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet tr_getPatientId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/tr_getRadiologyImages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet tr_getRadiologyImages(string patientId, string workTable);
        
        // CODEGEN: Parameter 'tr_getImageDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/tr_getImageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.tr_getImageDataResponse tr_getImageData(UPHealth.diagProxy.tr_getImageDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TotalReceivable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TotalReceivable(string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CheckRefLabInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] CheckRefLabInfo(string unit_id, string table, string date, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsNewCourier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsNewCourier(out string processInfo, string unit_id, string Courier_name, string Address, string Locality, string Landmark, string State, string District, string KeyPerson, string PhoneNo, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsInToRefLabTrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsInToRefLabTrf(out string processInfo, string unit_id, string patient_id, string i_code, string lab_id, decimal rl_rate, string courier_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetRefLabTransferedInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRefLabTransferedInfo(out string processInfo, string unit_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RefLabTestSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RefLabTestSetting(string I_code, string lab_id, decimal rate, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsNewRefLab", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsNewRefLab(string LabId, string RefLab_name, string Address_1, string Address_2, string State, string District, string Contact_No, string Contact_Person, string Mobile_No);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ValidateCoupon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateCoupon(string unit_id, string i_code, string coupon_no, string patient_id, string prm_1, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Referral_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Referral_Queries(out string processInfo, string logic, string prm_1, string prm_2, string prm_3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_FocusedList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_FocusedList(out string result, string Logic, string ref_code, string remark, string loginid, string prm1, string prm2, string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DuesInfoByReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DuesInfoByReferral(out string processInfo, string ref_code, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Trf_Patient_InfoForRefLab", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Trf_Patient_InfoForRefLab(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetInterUnitTestRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInterUnitTestRecords(string from, string to, string unit_id, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RateListUpdated_Log", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RateListUpdated_Log(out string processInfo, string updTable, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetManagerAccessUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetManagerAccessUnit(string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsRecvdInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsRecvdInfo(string unit_id, string loginId, decimal amount, string remark, string dcodes_months);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Pay_DailyIncentive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Pay_DailyIncentive(string unit_id, string loginId, string patientIdsStr, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPfRecordsForPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPfRecordsForPayment(out string processInfo, string unit_id, string login_id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MarkPayToReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkPayToReferral(string login_id, string d_codes, string mth_info, string refresh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPaymentRecevingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPaymentRecevingInfo(out string processInfo, string login_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CalculateDailyPfByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateDailyPfByUnit(string unit_id, string ref_by, string test_code, int totalcost, int rebate, int received, string unit_type, string ratelist, string ContRateList, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DailyPF_Messaging", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DailyPF_Messaging(string unit_id, string Login_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ins_PF_Payment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ins_PF_Payment(string login_id, string d_code, string forMonth, decimal Amount, string remarks, string distType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ins_PF_Receiving", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ins_PF_Receiving(string _loginid, System.DateTime _cr_date, decimal _amount, string _remarks, string _result, string dbName, string _distType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/inc_Slip_Records", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet inc_Slip_Records(out string processInfo, string d_code, string type, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/inc_CancelRefPayMark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet inc_CancelRefPayMark(out string processInfo, string emp_code, string d_code, string mth_info, string logic, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/inc_CancelRefPayMarkBulk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet inc_CancelRefPayMarkBulk(out string processInfo, string emp_code, string d_codes, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetDailyPfReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDailyPfReport(System.Data.DataSet ds, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateContract", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateContract(string cont_id, string ContType, string cont_subject, string unit_id, string ref_code, string emp_code, System.DateTime cont_from, System.DateTime cont_to, string remarks, string ustatus, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ContractRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ContractRate(string cont_id, string I_CODE, int rate, int cont_rate, int app_rate, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertRebateofDoctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertRebateofDoctor(string cont_id, string[] rebType, string[] section, decimal[] rebate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DataSynchronization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DataSynchronization(System.Data.DataSet ds, string unit_id, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ProcessHealthCardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ProcessHealthCardData(string main_unit_id, string unit_id, string State, string City, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ProcessSyncData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ProcessSyncData(string unit_id, string RecordType, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CurrentSaleSynchronisation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CurrentSaleSynchronisation(System.Data.DataSet ds, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/OnLineDataSynchronization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string OnLineDataSynchronization(System.Data.DataSet ds, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertRecordMatchData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InsertRecordMatchData(out string processInfo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_GetDailySalesInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_GetDailySalesInfo(out string processInfo, string unit_id, string reg_date, int RegNo, int FinNo, decimal total, decimal rebate, decimal received);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPatientInfo(string unit_id, string Patint_id, string Info_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyCodesAndCost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyCodesAndCost(out string processInfo, string master_unit_id, string ref_code, string card_no, string NewCard_Flag, string testCodes, string cardExists, string app_id, string promo_id, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyCodesAndCost_Central", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyCodesAndCost_Central(out string processInfo, string master_unit_id, string ref_code, string card_no, string NewCard_Flag, string testCodes, string app_id, string promo_id, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MarkDelayedReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkDelayedReport(out string processInfo, string unit_id, string pend_date, string strPatientId, string pend_flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_ReportComplaint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_ReportComplaint(out string processInfo, string patient_id, string work_table, string remark, string login_id);
        
        // CODEGEN: Parameter 'fileData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/PendingInfo_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.PendingInfo_InsertResponse PendingInfo_Insert(UPHealth.diagProxy.PendingInfo_InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AnalysisWorkingTable_1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AnalysisWorkingTable_1(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/YearlySalesAnalysisForSalesExecutive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string YearlySalesAnalysisForSalesExecutive(string ref_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DivisonSales_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DivisonSales_New(out string processInfo, int mth, string from, string to, string prm_1, string prm_2, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RevenueResourceAnalysis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RevenueResourceAnalysis(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_CustCardInfowithMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_CustCardInfowithMember(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_CustCardInfowithMemberNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_CustCardInfowithMemberNew(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers, 
                    string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_UpdateCustCardMemebers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_UpdateCustCardMemebers(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers, 
                    string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateNewMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.CreateNewMailResponse CreateNewMail(UPHealth.diagProxy.CreateNewMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferAppCancel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferAppCancel(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Send_RebateApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Send_RebateApproval(System.Data.DataSet ds);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Send_RebateApproval2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.Send_RebateApproval2Response Send_RebateApproval2(UPHealth.diagProxy.Send_RebateApproval2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Check_RebateApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Check_RebateApproval(string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateMyRateList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateMyRateList(string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateMyProfileMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateMyProfileMaster(string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getCreditSummery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCreditSummery(string employee_code, string Action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getRebateApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int getRebateApproval(string Patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Rebate_At_Source", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Rebate_At_Source(string login_id, string Patient_id, string ref_code, decimal totalcost, decimal rebate, decimal received, decimal RebateAtSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/NewRferralCoding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NewRferralCoding(
                    string ref_name, 
                    string degree, 
                    string speciality, 
                    string d_o_b, 
                    string mrg_anv, 
                    string name, 
                    string address, 
                    string landmark, 
                    string locality, 
                    string state, 
                    string city, 
                    string phone, 
                    string mobile_no, 
                    string timings, 
                    string instruction, 
                    string exec_code, 
                    string localratelist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getMainAssetNoAtUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getMainAssetNoAtUnit(string UnitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillMainAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillMainAsset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillSubAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillSubAsset(string assetCategCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillMainAssetNoAtUnitAssetCatWise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillMainAssetNoAtUnitAssetCatWise(string catCodeAndUnitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getAssetDetByEqpNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAssetDetByEqpNo(string EqNo, string unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/insertIntoComplaints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertIntoComplaints(string unitId, string loginId, string eqNo, string Compalint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getAssetAndSubAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAssetAndSubAsset(string mainEqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getSubAssetByCatCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getSubAssetByCatCode(string mainEqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getAssetNoToAttach", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAssetNoToAttach(string eqCat, string eqCode, string unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/attachAssetToMainAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string attachAssetToMainAsset(int autoId, string mainEqNo, string eqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getComplaintCommunication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getComplaintCommunication(string EqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/insertComplaintCommunication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertComplaintCommunication(string complCode, string loginId, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/closeComplaint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string closeComplaint(string unitId, string eqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getRepairedAssetDet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getRepairedAssetDet(string eqNo, string unitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date, decimal dpr_value);
        
        // CODEGEN: Parameter 'AssetTransferReportResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AssetTransferReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.AssetTransferReportResponse AssetTransferReport(UPHealth.diagProxy.AssetTransferReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertCaliberationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertCaliberationData(
                    out string processInfo, 
                    string Unit_Code, 
                    int OperatoID, 
                    int InstrumentID, 
                    int TestID, 
                    decimal ReagentBlankABS, 
                    decimal SampleVolume, 
                    decimal ReagentVolume, 
                    decimal CalStABS, 
                    decimal CalStValue, 
                    decimal Factor, 
                    string KitCmpName, 
                    string BatchNo, 
                    string OpenDateKit, 
                    int TotalTest, 
                    string CurDate, 
                    string Kitsize, 
                    string Rvalue, 
                    int control_id, 
                    decimal control_value, 
                    string control_batch_no, 
                    string Branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SubscribeComplaint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SubscribeComplaint(out string processInfo, string unit_id, string patient_id, string subject, string complaint, string compl_By, string compl_contNo, string compl_email, string login_id, string result);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SuscribeComplaintDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.SuscribeComplaintDetailResponse SuscribeComplaintDetail(UPHealth.diagProxy.SuscribeComplaintDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Quality_Querries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Quality_Querries(out string processInfo, string compl_id, string unit_id, string from, string to, string prm_1, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SaveRefRemark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveRefRemark(out string processInfo, string ref_code, string remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetDoctorForCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorForCall(out string processInfo, string prm, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetCustomerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerData(out string processInfo, string card_no, string division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/do_ServiceCalls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet do_ServiceCalls(out string processInfo, string unit_id, string from, string to, string IsCard, string login_id, string database);
        
        // CODEGEN: Parameter 'DownLoadFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DownLoadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.DownLoadFileResponse DownLoadFile(UPHealth.diagProxy.DownLoadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SaveErrorLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SaveErrorLog(string unitId, string DatabaseName, string errorLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/updateSaleSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateSaleSummary(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_NewCompliance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC_NewCompliance(out string processInfo, string unit_id, int div_id, string reg_no, string machineId, string valid_upto, string comp_id, string remarks);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_InsDocInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        UPHealth.diagProxy.GC_InsDocInfoResponse GC_InsDocInfo(UPHealth.diagProxy.GC_InsDocInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_AddEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC_AddEmployee(out string processInfo, string UID, string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_panalty_master", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_panalty_master(int auto_id, string emp_code, string unit_id, string panalty_type, string reason, string login_id, int amount, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetMarketingStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMarketingStaff(out string processInfo, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/My_Staff_Responsibility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet My_Staff_Responsibility(out string processInfo, string emp_code, string inp_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MarkIndvAttandence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MarkIndvAttandence(out string processInfo, string empCode, string dateOfB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetMyStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMyStaff(string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SingleAttendanceChecking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SingleAttendanceChecking(out string processInfo, string emp_code, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceMarkingByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AttendanceMarkingByDate(string parameter, string pMcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MarkOff_ArTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkOff_ArTime(string emp_id, string logic, string value, string refreshValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MyStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MyStaff(string emp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/EmpInfoChangeByManager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EmpInfoChangeByManager(string emp_code, string marital_status, string faimlyInfo, string mobileno, string reptime, string weeklyoff, string email, string logic, string RequestType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalarySlipInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPayableSalaryInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPayableSalaryInfo(string emp_code, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateSalaryPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateSalaryPaymentInfo_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSalaryPaymentInfo_New(string emp_code, string trf_date, string payMode, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsAdvanceSalayInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsAdvanceSalayInfo(string unit_id, string emp_code, decimal adv_amount, string login_id, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Leave_Info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Leave_Info(string unit_id, string emp_code, string T_O_L, string Frm_Date, string To_Date, string Mgr_Code, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetTrfdSalInfoByMgr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTrfdSalInfoByMgr(string empcode, string dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReimbursementInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReimbursementInfo(string work, string unit_id, string emp_code, string login_id, string remarks, string refresh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetReimbursementReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReimbursementReport(string date, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangePassword(string empCode, string oldPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceSheetoftheday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AttendanceSheetoftheday(out string processInfo, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SearchStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchStaff(string key, string CompCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AdvSalayInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AdvSalayInfo(out string processInfo, string mgr_code, string emp_code, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Transfer_idCheckingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Transfer_idCheckingInfo(out string processInfo, string unit_id, string trf_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/receiveInStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string receiveInStock(string master_key, string trf_id, int qty, int rcpt_qty, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getListofTransferedItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getListofTransferedItem(string unit_id, string trf_id, int receiptcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/stockAtUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet stockAtUnit(string unit_id, string comp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetProductHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductHistory(string unit_id, string item_id, string from_date, string to_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetLatestPackSizeWithPendingOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLatestPackSizeWithPendingOrder(string unit_id, string item_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetUnProcessedOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUnProcessedOrder(out string processInfo, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetOrderRawData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrderRawData(out string processInfo, string unit_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SearchProductofUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchProductofUnit(out string processInfo, string unit_id, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TrackUnitItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TrackUnitItem(out string processInfo, string item_id, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Audit_Info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="processInfo")]
        string Audit_Info(string userType, string workType, string login_id, string item_id, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetIssuedRecToUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIssuedRecToUpdate(out string processInfo, string unit_id, string item_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DeleteIssuedItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="processInfo")]
        string DeleteIssuedItems(int auto_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Delete_TransferProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Delete_TransferProduct(string auto_id, string fromorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CompleteTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CompleteTransfer(string trf_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getProductIdentity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getProductIdentity(string item_id, string unit_id, string comp_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferStocks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferStocks(string[] t1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GoodsReturnRec", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GoodsReturnRec(out string processInfo, string trf_id, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ProductSearchToSale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProductSearchToSale(string item_name, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/getProductDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getProductDetail(string item_id, string unit_id);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadPdfDocument_Speciality", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class UploadPdfDocument_SpecialityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string login_id;
        
        public UploadPdfDocument_SpecialityRequest() {
        }
        
        public UploadPdfDocument_SpecialityRequest(byte[] data, string fileName, string login_id) {
            this.data = data;
            this.fileName = fileName;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadPdfDocument_SpecialityResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class UploadPdfDocument_SpecialityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string UploadPdfDocument_SpecialityResult;
        
        public UploadPdfDocument_SpecialityResponse() {
        }
        
        public UploadPdfDocument_SpecialityResponse(string UploadPdfDocument_SpecialityResult) {
            this.UploadPdfDocument_SpecialityResult = UploadPdfDocument_SpecialityResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exprohelp.com/")]
    public partial class CustomerCard : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string payTypeField;
        
        private string distTypeField;
        
        private string logicField;
        
        private string login_idField;
        
        private string cardTypeField;
        
        private string cust_NameField;
        
        private System.DateTime dOBField;
        
        private string areaField;
        
        private string localityField;
        
        private string districtField;
        
        private string stateField;
        
        private string countryField;
        
        private string pINField;
        
        private string phoneNoField;
        
        private string mobileNoField;
        
        private string emailField;
        
        private string spouse_NameField;
        
        private System.DateTime spouse_DOBField;
        
        private string child_Name_1Field;
        
        private System.DateTime child_DOB_1Field;
        
        private string child_Name_2Field;
        
        private System.DateTime child_DOB_2Field;
        
        private string child_Name_3Field;
        
        private System.DateTime child_DOB_3Field;
        
        private string child_Name_4Field;
        
        private System.DateTime child_DOB_4Field;
        
        private string child_Name_5Field;
        
        private System.DateTime child_DOB_5Field;
        
        private string card_NoField;
        
        private string inst_CodeField;
        
        private System.DateTime actDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
                this.RaisePropertyChanged("PayType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DistType {
            get {
                return this.distTypeField;
            }
            set {
                this.distTypeField = value;
                this.RaisePropertyChanged("DistType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string logic {
            get {
                return this.logicField;
            }
            set {
                this.logicField = value;
                this.RaisePropertyChanged("logic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string login_id {
            get {
                return this.login_idField;
            }
            set {
                this.login_idField = value;
                this.RaisePropertyChanged("login_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
                this.RaisePropertyChanged("CardType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Cust_Name {
            get {
                return this.cust_NameField;
            }
            set {
                this.cust_NameField = value;
                this.RaisePropertyChanged("Cust_Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
                this.RaisePropertyChanged("DOB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
                this.RaisePropertyChanged("Area");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Locality {
            get {
                return this.localityField;
            }
            set {
                this.localityField = value;
                this.RaisePropertyChanged("Locality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
                this.RaisePropertyChanged("District");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
                this.RaisePropertyChanged("PIN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string PhoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                this.phoneNoField = value;
                this.RaisePropertyChanged("PhoneNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string MobileNo {
            get {
                return this.mobileNoField;
            }
            set {
                this.mobileNoField = value;
                this.RaisePropertyChanged("MobileNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Spouse_Name {
            get {
                return this.spouse_NameField;
            }
            set {
                this.spouse_NameField = value;
                this.RaisePropertyChanged("Spouse_Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public System.DateTime Spouse_DOB {
            get {
                return this.spouse_DOBField;
            }
            set {
                this.spouse_DOBField = value;
                this.RaisePropertyChanged("Spouse_DOB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Child_Name_1 {
            get {
                return this.child_Name_1Field;
            }
            set {
                this.child_Name_1Field = value;
                this.RaisePropertyChanged("Child_Name_1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public System.DateTime Child_DOB_1 {
            get {
                return this.child_DOB_1Field;
            }
            set {
                this.child_DOB_1Field = value;
                this.RaisePropertyChanged("Child_DOB_1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Child_Name_2 {
            get {
                return this.child_Name_2Field;
            }
            set {
                this.child_Name_2Field = value;
                this.RaisePropertyChanged("Child_Name_2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public System.DateTime Child_DOB_2 {
            get {
                return this.child_DOB_2Field;
            }
            set {
                this.child_DOB_2Field = value;
                this.RaisePropertyChanged("Child_DOB_2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Child_Name_3 {
            get {
                return this.child_Name_3Field;
            }
            set {
                this.child_Name_3Field = value;
                this.RaisePropertyChanged("Child_Name_3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public System.DateTime Child_DOB_3 {
            get {
                return this.child_DOB_3Field;
            }
            set {
                this.child_DOB_3Field = value;
                this.RaisePropertyChanged("Child_DOB_3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string Child_Name_4 {
            get {
                return this.child_Name_4Field;
            }
            set {
                this.child_Name_4Field = value;
                this.RaisePropertyChanged("Child_Name_4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public System.DateTime Child_DOB_4 {
            get {
                return this.child_DOB_4Field;
            }
            set {
                this.child_DOB_4Field = value;
                this.RaisePropertyChanged("Child_DOB_4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string Child_Name_5 {
            get {
                return this.child_Name_5Field;
            }
            set {
                this.child_Name_5Field = value;
                this.RaisePropertyChanged("Child_Name_5");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public System.DateTime Child_DOB_5 {
            get {
                return this.child_DOB_5Field;
            }
            set {
                this.child_DOB_5Field = value;
                this.RaisePropertyChanged("Child_DOB_5");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string Card_No {
            get {
                return this.card_NoField;
            }
            set {
                this.card_NoField = value;
                this.RaisePropertyChanged("Card_No");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string Inst_Code {
            get {
                return this.inst_CodeField;
            }
            set {
                this.inst_CodeField = value;
                this.RaisePropertyChanged("Inst_Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public System.DateTime ActDate {
            get {
                return this.actDateField;
            }
            set {
                this.actDateField = value;
                this.RaisePropertyChanged("ActDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuditReport", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetAuditReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string unit_id;
        
        public GetAuditReportRequest() {
        }
        
        public GetAuditReportRequest(string unit_id) {
            this.unit_id = unit_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuditReportResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetAuditReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAuditReportResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GetAuditReportResponse() {
        }
        
        public GetAuditReportResponse(byte[] GetAuditReportResult, string processInfo) {
            this.GetAuditReportResult = GetAuditReportResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuditReportByAuditId", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetAuditReportByAuditIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string auditid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string unitid;
        
        public GetAuditReportByAuditIdRequest() {
        }
        
        public GetAuditReportByAuditIdRequest(string auditid, string unitid) {
            this.auditid = auditid;
            this.unitid = unitid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuditReportByAuditIdResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetAuditReportByAuditIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAuditReportByAuditIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GetAuditReportByAuditIdResponse() {
        }
        
        public GetAuditReportByAuditIdResponse(byte[] GetAuditReportByAuditIdResult, string processInfo) {
            this.GetAuditReportByAuditIdResult = GetAuditReportByAuditIdResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocuments", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Doc_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string Division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Unit_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string FinYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string FileType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public TransferDocumentsRequest() {
        }
        
        public TransferDocumentsRequest(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data) {
            this.Doc_date = Doc_date;
            this.Division = Division;
            this.Unit_Id = Unit_Id;
            this.FinYear = FinYear;
            this.FileType = FileType;
            this.FileName = FileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocumentsResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string TransferDocumentsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string msg;
        
        public TransferDocumentsResponse() {
        }
        
        public TransferDocumentsResponse(string TransferDocumentsResult, string msg) {
            this.TransferDocumentsResult = TransferDocumentsResult;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadPdfDocument", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class UploadPdfDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string fileName;
        
        public UploadPdfDocumentRequest() {
        }
        
        public UploadPdfDocumentRequest(byte[] data, string fileName) {
            this.data = data;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadPdfDocumentResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class UploadPdfDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string UploadPdfDocumentResult;
        
        public UploadPdfDocumentResponse() {
        }
        
        public UploadPdfDocumentResponse(string UploadPdfDocumentResult) {
            this.UploadPdfDocumentResult = UploadPdfDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createNewJob", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class createNewJobRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string assigned_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string assigned_to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public System.DateTime finish_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string priority;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string Comment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public string Attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=8)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=9)]
        public string Location;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public createNewJobRequest() {
        }
        
        public createNewJobRequest(string subject, string Description, string assigned_by, string assigned_to, System.DateTime finish_date, string priority, string Comment, string Attachment, string FileName, string Location, byte[] data) {
            this.subject = subject;
            this.Description = Description;
            this.assigned_by = assigned_by;
            this.assigned_to = assigned_to;
            this.finish_date = finish_date;
            this.priority = priority;
            this.Comment = Comment;
            this.Attachment = Attachment;
            this.FileName = FileName;
            this.Location = Location;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createNewJobResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class createNewJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string createNewJobResult;
        
        public createNewJobResponse() {
        }
        
        public createNewJobResponse(string createNewJobResult) {
            this.createNewJobResult = createNewJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_LoginlegalInfo", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_LoginlegalInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string LType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string remarks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string attach_file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public GC_LoginlegalInfoRequest() {
        }
        
        public GC_LoginlegalInfoRequest(string unit_id, string subject, string LType, string remarks, string attach_file, string login_id, byte[] data) {
            this.unit_id = unit_id;
            this.subject = subject;
            this.LType = LType;
            this.remarks = remarks;
            this.attach_file = attach_file;
            this.login_id = login_id;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_LoginlegalInfoResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_LoginlegalInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string GC_LoginlegalInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_LoginlegalInfoResponse() {
        }
        
        public GC_LoginlegalInfoResponse(string GC_LoginlegalInfoResult, string processInfo) {
            this.GC_LoginlegalInfoResult = GC_LoginlegalInfoResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="gc_SalaryChart", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class gc_SalaryChartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string SalaryChartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string unit_id;
        
        public gc_SalaryChartRequest() {
        }
        
        public gc_SalaryChartRequest(string SalaryChartDate, string unit_id) {
            this.SalaryChartDate = SalaryChartDate;
            this.unit_id = unit_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="gc_SalaryChartResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class gc_SalaryChartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] gc_SalaryChartResult;
        
        public gc_SalaryChartResponse() {
        }
        
        public gc_SalaryChartResponse(byte[] gc_SalaryChartResult) {
            this.gc_SalaryChartResult = gc_SalaryChartResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSalaryChart", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetSalaryChartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string SalaryChartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Trainee;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string ReportType;
        
        public GetSalaryChartRequest() {
        }
        
        public GetSalaryChartRequest(string SalaryChartDate, string CompCode, string Trainee, string ReportType) {
            this.SalaryChartDate = SalaryChartDate;
            this.CompCode = CompCode;
            this.Trainee = Trainee;
            this.ReportType = ReportType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSalaryChartResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetSalaryChartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSalaryChartResult;
        
        public GetSalaryChartResponse() {
        }
        
        public GetSalaryChartResponse(byte[] GetSalaryChartResult) {
            this.GetSalaryChartResult = GetSalaryChartResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIncreamentLetter", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetIncreamentLetterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string emp_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string increament_date;
        
        public GetIncreamentLetterRequest() {
        }
        
        public GetIncreamentLetterRequest(string emp_code, string increament_date) {
            this.emp_code = emp_code;
            this.increament_date = increament_date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIncreamentLetterResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GetIncreamentLetterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetIncreamentLetterResult;
        
        public GetIncreamentLetterResponse() {
        }
        
        public GetIncreamentLetterResponse(byte[] GetIncreamentLetterResult) {
            this.GetIncreamentLetterResult = GetIncreamentLetterResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_RegisterForFines", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_RegisterForFinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_RegisterForFinesRequest() {
        }
        
        public GC_RegisterForFinesRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_RegisterForFinesResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_RegisterForFinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_RegisterForFinesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_RegisterForFinesResponse() {
        }
        
        public GC_RegisterForFinesResponse(byte[] GC_RegisterForFinesResult, string processInfo) {
            this.GC_RegisterForFinesResult = GC_RegisterForFinesResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_RegisterForDeduction", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_RegisterForDeductionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_RegisterForDeductionRequest() {
        }
        
        public GC_RegisterForDeductionRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_RegisterForDeductionResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_RegisterForDeductionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_RegisterForDeductionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_RegisterForDeductionResponse() {
        }
        
        public GC_RegisterForDeductionResponse(byte[] GC_RegisterForDeductionResult, string processInfo) {
            this.GC_RegisterForDeductionResult = GC_RegisterForDeductionResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_OverTimeRegister", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_OverTimeRegisterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_OverTimeRegisterRequest() {
        }
        
        public GC_OverTimeRegisterRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_OverTimeRegisterResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_OverTimeRegisterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_OverTimeRegisterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_OverTimeRegisterResponse() {
        }
        
        public GC_OverTimeRegisterResponse(byte[] GC_OverTimeRegisterResult, string processInfo) {
            this.GC_OverTimeRegisterResult = GC_OverTimeRegisterResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_Weekdayoff", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_WeekdayoffRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_WeekdayoffRequest() {
        }
        
        public GC_WeekdayoffRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_WeekdayoffResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_WeekdayoffResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_WeekdayoffResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_WeekdayoffResponse() {
        }
        
        public GC_WeekdayoffResponse(byte[] GC_WeekdayoffResult, string processInfo) {
            this.GC_WeekdayoffResult = GC_WeekdayoffResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_FormDRemunRule", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_FormDRemunRuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_FormDRemunRuleRequest() {
        }
        
        public GC_FormDRemunRuleRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_FormDRemunRuleResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_FormDRemunRuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_FormDRemunRuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_FormDRemunRuleResponse() {
        }
        
        public GC_FormDRemunRuleResponse(byte[] GC_FormDRemunRuleResult, string processInfo) {
            this.GC_FormDRemunRuleResult = GC_FormDRemunRuleResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_NoticeOfChanges", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_NoticeOfChangesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_NoticeOfChangesRequest() {
        }
        
        public GC_NoticeOfChangesRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_NoticeOfChangesResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_NoticeOfChangesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_NoticeOfChangesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_NoticeOfChangesResponse() {
        }
        
        public GC_NoticeOfChangesResponse(byte[] GC_NoticeOfChangesResult, string processInfo) {
            this.GC_NoticeOfChangesResult = GC_NoticeOfChangesResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_NoticeOfChangesOfOtherStates", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_NoticeOfChangesOfOtherStatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_NoticeOfChangesOfOtherStatesRequest() {
        }
        
        public GC_NoticeOfChangesOfOtherStatesRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_NoticeOfChangesOfOtherStatesResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_NoticeOfChangesOfOtherStatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_NoticeOfChangesOfOtherStatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_NoticeOfChangesOfOtherStatesResponse() {
        }
        
        public GC_NoticeOfChangesOfOtherStatesResponse(byte[] GC_NoticeOfChangesOfOtherStatesResult, string processInfo) {
            this.GC_NoticeOfChangesOfOtherStatesResult = GC_NoticeOfChangesOfOtherStatesResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_DamageOrLoss", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_DamageOrLossRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_DamageOrLossRequest() {
        }
        
        public GC_DamageOrLossRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_DamageOrLossResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_DamageOrLossResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_DamageOrLossResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_DamageOrLossResponse() {
        }
        
        public GC_DamageOrLossResponse(byte[] GC_DamageOrLossResult, string processInfo) {
            this.GC_DamageOrLossResult = GC_DamageOrLossResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_AnualReturn", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_AnualReturnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public object date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        public GC_AnualReturnRequest() {
        }
        
        public GC_AnualReturnRequest(string division, string CompCode, string unit_id, object date, string Logic, string login_id) {
            this.division = division;
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.date = date;
            this.Logic = Logic;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_AnualReturnResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_AnualReturnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_AnualReturnResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_AnualReturnResponse() {
        }
        
        public GC_AnualReturnResponse(byte[] GC_AnualReturnResult, string processInfo) {
            this.GC_AnualReturnResult = GC_AnualReturnResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_AttendenceRegisterOfUnit", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_AttendenceRegisterOfUnitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string CompCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public System.DateTime att_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string Logic;
        
        public GC_AttendenceRegisterOfUnitRequest() {
        }
        
        public GC_AttendenceRegisterOfUnitRequest(string CompCode, string unit_id, System.DateTime att_date, string login_id, string Logic) {
            this.CompCode = CompCode;
            this.unit_id = unit_id;
            this.att_date = att_date;
            this.login_id = login_id;
            this.Logic = Logic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_AttendenceRegisterOfUnitResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_AttendenceRegisterOfUnitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GC_AttendenceRegisterOfUnitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_AttendenceRegisterOfUnitResponse() {
        }
        
        public GC_AttendenceRegisterOfUnitResponse(byte[] GC_AttendenceRegisterOfUnitResult, string processInfo) {
            this.GC_AttendenceRegisterOfUnitResult = GC_AttendenceRegisterOfUnitResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CGHS_DocInsert", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class CGHS_DocInsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string card_no;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string patient_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string logic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public bool _tokenExist;
        
        public CGHS_DocInsertRequest() {
        }
        
        public CGHS_DocInsertRequest(string unit_id, string card_no, string patient_id, string logic, string login_id, byte[] data, string month, bool _tokenExist) {
            this.unit_id = unit_id;
            this.card_no = card_no;
            this.patient_id = patient_id;
            this.logic = logic;
            this.login_id = login_id;
            this.data = data;
            this.month = month;
            this._tokenExist = _tokenExist;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CGHS_DocInsertResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class CGHS_DocInsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string CGHS_DocInsertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public CGHS_DocInsertResponse() {
        }
        
        public CGHS_DocInsertResponse(string CGHS_DocInsertResult, string processInfo) {
            this.CGHS_DocInsertResult = CGHS_DocInsertResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertRadiologyBMDECGImages", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class InsertRadiologyBMDECGImagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string patient_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string report_history;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Investigation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string workTable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public decimal totalsize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string HeadName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public InsertRadiologyBMDECGImagesRequest() {
        }
        
        public InsertRadiologyBMDECGImagesRequest(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, string HeadName, byte[] data) {
            this.patient_id = patient_id;
            this.report_history = report_history;
            this.Investigation = Investigation;
            this.workTable = workTable;
            this.totalsize = totalsize;
            this.fileName = fileName;
            this.HeadName = HeadName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertRadiologyBMDECGImagesResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class InsertRadiologyBMDECGImagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string InsertRadiologyBMDECGImagesResult;
        
        public InsertRadiologyBMDECGImagesResponse() {
        }
        
        public InsertRadiologyBMDECGImagesResponse(string InsertRadiologyBMDECGImagesResult) {
            this.InsertRadiologyBMDECGImagesResult = InsertRadiologyBMDECGImagesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_RadiologyRegistration", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_RadiologyRegistrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string patient_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string report_history;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Investigation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string workTable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public decimal totalsize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public tr_RadiologyRegistrationRequest() {
        }
        
        public tr_RadiologyRegistrationRequest(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, byte[] data) {
            this.patient_id = patient_id;
            this.report_history = report_history;
            this.Investigation = Investigation;
            this.workTable = workTable;
            this.totalsize = totalsize;
            this.fileName = fileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_RadiologyRegistrationResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_RadiologyRegistrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string tr_RadiologyRegistrationResult;
        
        public tr_RadiologyRegistrationResponse() {
        }
        
        public tr_RadiologyRegistrationResponse(string tr_RadiologyRegistrationResult) {
            this.tr_RadiologyRegistrationResult = tr_RadiologyRegistrationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_getImageData", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_getImageDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string path;
        
        public tr_getImageDataRequest() {
        }
        
        public tr_getImageDataRequest(string path) {
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_getImageDataResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_getImageDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] tr_getImageDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string message;
        
        public tr_getImageDataResponse() {
        }
        
        public tr_getImageDataResponse(byte[] tr_getImageDataResult, string message) {
            this.tr_getImageDataResult = tr_getImageDataResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PendingInfo_Insert", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class PendingInfo_InsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string pend_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public int total_no;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public int PendingNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileData;
        
        public PendingInfo_InsertRequest() {
        }
        
        public PendingInfo_InsertRequest(string pend_date, string unit_id, int total_no, int PendingNo, string remark, byte[] fileData) {
            this.pend_date = pend_date;
            this.unit_id = unit_id;
            this.total_no = total_no;
            this.PendingNo = PendingNo;
            this.remark = remark;
            this.fileData = fileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PendingInfo_InsertResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class PendingInfo_InsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string PendingInfo_InsertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public PendingInfo_InsertResponse() {
        }
        
        public PendingInfo_InsertResponse(string PendingInfo_InsertResult, string processInfo) {
            this.PendingInfo_InsertResult = PendingInfo_InsertResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateNewMail", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class CreateNewMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string loginId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string TowhomSent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string Conversation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string strFilename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string eType;
        
        public CreateNewMailRequest() {
        }
        
        public CreateNewMailRequest(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, byte[] data, string eType) {
            this.loginId = loginId;
            this.TowhomSent = TowhomSent;
            this.Subject = Subject;
            this.Conversation = Conversation;
            this.strFilename = strFilename;
            this.data = data;
            this.eType = eType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateNewMailResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class CreateNewMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string CreateNewMailResult;
        
        public CreateNewMailResponse() {
        }
        
        public CreateNewMailResponse(string CreateNewMailResult) {
            this.CreateNewMailResult = CreateNewMailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_RebateApproval2", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Send_RebateApproval2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string app_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string pt_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string investigation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string reason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public decimal cost;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public decimal rebate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public decimal rebate_req;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=8)]
        public string ref_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=9)]
        public string rebate_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=10)]
        public string file_path;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public Send_RebateApproval2Request() {
        }
        
        public Send_RebateApproval2Request(string app_id, string pt_name, string investigation, string reason, decimal cost, decimal rebate, decimal rebate_req, string login_id, string ref_code, string rebate_by, string file_path, byte[] data) {
            this.app_id = app_id;
            this.pt_name = pt_name;
            this.investigation = investigation;
            this.reason = reason;
            this.cost = cost;
            this.rebate = rebate;
            this.rebate_req = rebate_req;
            this.login_id = login_id;
            this.ref_code = ref_code;
            this.rebate_by = rebate_by;
            this.file_path = file_path;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_RebateApproval2Response", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Send_RebateApproval2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Send_RebateApproval2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public Send_RebateApproval2Response() {
        }
        
        public Send_RebateApproval2Response(string Send_RebateApproval2Result, string processInfo) {
            this.Send_RebateApproval2Result = Send_RebateApproval2Result;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssetTransferReport", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class AssetTransferReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string AutoId;
        
        public AssetTransferReportRequest() {
        }
        
        public AssetTransferReportRequest(string AutoId) {
            this.AutoId = AutoId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssetTransferReportResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class AssetTransferReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AssetTransferReportResult;
        
        public AssetTransferReportResponse() {
        }
        
        public AssetTransferReportResponse(byte[] AssetTransferReportResult) {
            this.AssetTransferReportResult = AssetTransferReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SuscribeComplaintDetail", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class SuscribeComplaintDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string compl_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string result;
        
        public SuscribeComplaintDetailRequest() {
        }
        
        public SuscribeComplaintDetailRequest(string compl_id, string extension, string remark, byte[] data, string login_id, string result) {
            this.compl_id = compl_id;
            this.extension = extension;
            this.remark = remark;
            this.data = data;
            this.login_id = login_id;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SuscribeComplaintDetailResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class SuscribeComplaintDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string SuscribeComplaintDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public SuscribeComplaintDetailResponse() {
        }
        
        public SuscribeComplaintDetailResponse(string SuscribeComplaintDetailResult, string processInfo) {
            this.SuscribeComplaintDetailResult = SuscribeComplaintDetailResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownLoadFile", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownLoadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string file_path;
        
        public DownLoadFileRequest() {
        }
        
        public DownLoadFileRequest(string file_path) {
            this.file_path = file_path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownLoadFileResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownLoadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownLoadFileResult;
        
        public DownLoadFileResponse() {
        }
        
        public DownLoadFileResponse(byte[] DownLoadFileResult) {
            this.DownLoadFileResult = DownLoadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_InsDocInfo", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_InsDocInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string UID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string div_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string doc_remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string doc_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public GC_InsDocInfoRequest() {
        }
        
        public GC_InsDocInfoRequest(string UID, string div_name, string fileName, string doc_remark, string doc_id, byte[] data) {
            this.UID = UID;
            this.div_name = div_name;
            this.fileName = fileName;
            this.doc_remark = doc_remark;
            this.doc_id = doc_id;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_InsDocInfoResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_InsDocInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string GC_InsDocInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public GC_InsDocInfoResponse() {
        }
        
        public GC_InsDocInfoResponse(string GC_InsDocInfoResult, string processInfo) {
            this.GC_InsDocInfoResult = GC_InsDocInfoResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Diagnostic_CS_WebServiceSoapChannel : UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Diagnostic_CS_WebServiceSoapClient : System.ServiceModel.ClientBase<UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap>, UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap {
        
        public Diagnostic_CS_WebServiceSoapClient() {
        }
        
        public Diagnostic_CS_WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Diagnostic_CS_WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Diagnostic_CS_WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Diagnostic_CS_WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insert_into_registrationByUnit(out string processInfo, string batch_No, string Parent_Id, string Patient_Id, string pt_name, int Age, string age_Type, string Sex, string Ref_id, string ref_Name, string TestCode, string Samp_Coll_Date, string login_id) {
            return base.Channel.Insert_into_registrationByUnit(out processInfo, batch_No, Parent_Id, Patient_Id, pt_name, Age, age_Type, Sex, Ref_id, ref_Name, TestCode, Samp_Coll_Date, login_id);
        }
        
        public System.Data.DataSet Speciality_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic) {
            return base.Channel.Speciality_Queries(out processInfo, unit_id, reg_no, prm_1, prm_2, from, to, Logic);
        }
        
        public string Insert_BySpeciality(
                    string unit_id, 
                    string client_id, 
                    string Patient_Id, 
                    string pt_name, 
                    int Age, 
                    string age_Type, 
                    string Sex, 
                    string mobile_no, 
                    string Ref_id, 
                    string ref_Name, 
                    string TestCode, 
                    string Samp_Coll_Date, 
                    int totalcost, 
                    int rebate, 
                    int net, 
                    string remark, 
                    string login_id) {
            return base.Channel.Insert_BySpeciality(unit_id, client_id, Patient_Id, pt_name, Age, age_Type, Sex, mobile_no, Ref_id, ref_Name, TestCode, Samp_Coll_Date, totalcost, rebate, net, remark, login_id);
        }
        
        public string Insert_Modify_Unit_LocalLinkTest(out string processInfo, string main_unit, string i_code, string Logic) {
            return base.Channel.Insert_Modify_Unit_LocalLinkTest(out processInfo, main_unit, i_code, Logic);
        }
        
        public string Insert_BySpecialityRepeat(string unit_id, string Master_Id, int totalcost, int rebate, int net, string TestCode, string remark, string login_id) {
            return base.Channel.Insert_BySpecialityRepeat(unit_id, Master_Id, totalcost, rebate, net, TestCode, remark, login_id);
        }
        
        public string Insert_ByUnit(
                    string batch_No, 
                    string unit_id, 
                    string Patient_Id, 
                    string pt_name, 
                    int Age, 
                    string age_Type, 
                    string Sex, 
                    string Ref_id, 
                    string ref_Name, 
                    string mobile_no, 
                    string TestCode, 
                    string Samp_Coll_Date, 
                    int totalcost, 
                    int rebate, 
                    int net, 
                    string remark, 
                    string login_id) {
            return base.Channel.Insert_ByUnit(batch_No, unit_id, Patient_Id, pt_name, Age, age_Type, Sex, Ref_id, ref_Name, mobile_no, TestCode, Samp_Coll_Date, totalcost, rebate, net, remark, login_id);
        }
        
        public string Cancel_SpecialityRegistration(string unit_id, string reg_no, string TestCode, string remark, string login_id) {
            return base.Channel.Cancel_SpecialityRegistration(unit_id, reg_no, TestCode, remark, login_id);
        }
        
        public string Insert_Modify_Cont_ratesTemp(string unit_id, string client_id, string I_CODE, int cont_rate, string Logic, string login_id) {
            return base.Channel.Insert_Modify_Cont_ratesTemp(unit_id, client_id, I_CODE, cont_rate, Logic, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.UploadPdfDocument_SpecialityResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.UploadPdfDocument_Speciality(UPHealth.diagProxy.UploadPdfDocument_SpecialityRequest request) {
            return base.Channel.UploadPdfDocument_Speciality(request);
        }
        
        public string UploadPdfDocument_Speciality(byte[] data, string fileName, string login_id) {
            UPHealth.diagProxy.UploadPdfDocument_SpecialityRequest inValue = new UPHealth.diagProxy.UploadPdfDocument_SpecialityRequest();
            inValue.data = data;
            inValue.fileName = fileName;
            inValue.login_id = login_id;
            UPHealth.diagProxy.UploadPdfDocument_SpecialityResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).UploadPdfDocument_Speciality(inValue);
            return retVal.UploadPdfDocument_SpecialityResult;
        }
        
        public System.Data.DataSet LIS_Queries(out string processInfo, string machine_id, string patient_id, string i_code, string date, int prm_2, string logic, string read_1, string unit_1) {
            return base.Channel.LIS_Queries(out processInfo, machine_id, patient_id, i_code, date, prm_2, logic, read_1, unit_1);
        }
        
        public System.Data.DataSet MOB_SalesQueries(out string processInfo, string emp_code, string d_code, string prm_1, string prm_2, string logic) {
            return base.Channel.MOB_SalesQueries(out processInfo, emp_code, d_code, prm_1, prm_2, logic);
        }
        
        public System.Data.DataSet GetCard_Queries(out string processInfo, string LabCode, string card_no, string mobile, string prm_1, string prm_2, string Logic) {
            return base.Channel.GetCard_Queries(out processInfo, LabCode, card_no, mobile, prm_1, prm_2, Logic);
        }
        
        public string ReplaceCard(string old_card_no, string new_card_no, string unit_id, string login_id) {
            return base.Channel.ReplaceCard(old_card_no, new_card_no, unit_id, login_id);
        }
        
        public string Card_Info_insert(UPHealth.diagProxy.CustomerCard ccobj, string dbname) {
            return base.Channel.Card_Info_insert(ccobj, dbname);
        }
        
        public System.Data.DataSet GetACardInfo(string Card_No) {
            return base.Channel.GetACardInfo(Card_No);
        }
        
        public System.Data.DataSet GetACardInfoByUnit(string Card_No, string unit_id) {
            return base.Channel.GetACardInfoByUnit(Card_No, unit_id);
        }
        
        public string GetACardStatus(string Card_No, string unit_id, string logic) {
            return base.Channel.GetACardStatus(Card_No, unit_id, logic);
        }
        
        public string HealthCardActivationRequest(string Card_No) {
            return base.Channel.HealthCardActivationRequest(Card_No);
        }
        
        public System.Data.DataSet ActivateCard(string ActivationNo) {
            return base.Channel.ActivateCard(ActivationNo);
        }
        
        public string ActivateHealthCard(string unit_id, string login_id, string Card_No) {
            return base.Channel.ActivateHealthCard(unit_id, login_id, Card_No);
        }
        
        public string InsCurrentSale(string unit_id, decimal TotalCost, decimal Rebate, decimal Received, System.DateTime sale_date) {
            return base.Channel.InsCurrentSale(unit_id, TotalCost, Rebate, Received, sale_date);
        }
        
        public string InsCurrentSaleInfo(System.Data.DataSet ds) {
            return base.Channel.InsCurrentSaleInfo(ds);
        }
        
        public System.Data.DataSet GetUpdationInfo(string login_id, string unit_id) {
            return base.Channel.GetUpdationInfo(login_id, unit_id);
        }
        
        public string GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GetAuditReportResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GetAuditReport(UPHealth.diagProxy.GetAuditReportRequest request) {
            return base.Channel.GetAuditReport(request);
        }
        
        public byte[] GetAuditReport(string unit_id, out string processInfo) {
            UPHealth.diagProxy.GetAuditReportRequest inValue = new UPHealth.diagProxy.GetAuditReportRequest();
            inValue.unit_id = unit_id;
            UPHealth.diagProxy.GetAuditReportResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GetAuditReport(inValue);
            processInfo = retVal.processInfo;
            return retVal.GetAuditReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GetAuditReportByAuditIdResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GetAuditReportByAuditId(UPHealth.diagProxy.GetAuditReportByAuditIdRequest request) {
            return base.Channel.GetAuditReportByAuditId(request);
        }
        
        public byte[] GetAuditReportByAuditId(string auditid, string unitid, out string processInfo) {
            UPHealth.diagProxy.GetAuditReportByAuditIdRequest inValue = new UPHealth.diagProxy.GetAuditReportByAuditIdRequest();
            inValue.auditid = auditid;
            inValue.unitid = unitid;
            UPHealth.diagProxy.GetAuditReportByAuditIdResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GetAuditReportByAuditId(inValue);
            processInfo = retVal.processInfo;
            return retVal.GetAuditReportByAuditIdResult;
        }
        
        public string QueryExecute(string query, string Database) {
            return base.Channel.QueryExecute(query, Database);
        }
        
        public System.Data.DataSet GetQueryResult(string query, string Database) {
            return base.Channel.GetQueryResult(query, Database);
        }
        
        public System.Data.DataSet GetStateList(string Country) {
            return base.Channel.GetStateList(Country);
        }
        
        public System.Data.DataSet GetDistrictList(string Country, string State_Code) {
            return base.Channel.GetDistrictList(Country, State_Code);
        }
        
        public void SendSMS(string Message, string MobileNo) {
            base.Channel.SendSMS(Message, MobileNo);
        }
        
        public string GetSqlScriptofStoredProcedure(string unit_id, string login_id, string DatabaseName, string sp_name) {
            return base.Channel.GetSqlScriptofStoredProcedure(unit_id, login_id, DatabaseName, sp_name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.TransferDocumentsResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.TransferDocuments(UPHealth.diagProxy.TransferDocumentsRequest request) {
            return base.Channel.TransferDocuments(request);
        }
        
        public string TransferDocuments(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data, out string msg) {
            UPHealth.diagProxy.TransferDocumentsRequest inValue = new UPHealth.diagProxy.TransferDocumentsRequest();
            inValue.Doc_date = Doc_date;
            inValue.Division = Division;
            inValue.Unit_Id = Unit_Id;
            inValue.FinYear = FinYear;
            inValue.FileType = FileType;
            inValue.FileName = FileName;
            inValue.data = data;
            UPHealth.diagProxy.TransferDocumentsResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).TransferDocuments(inValue);
            msg = retVal.msg;
            return retVal.TransferDocumentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.UploadPdfDocumentResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.UploadPdfDocument(UPHealth.diagProxy.UploadPdfDocumentRequest request) {
            return base.Channel.UploadPdfDocument(request);
        }
        
        public string UploadPdfDocument(byte[] data, string fileName) {
            UPHealth.diagProxy.UploadPdfDocumentRequest inValue = new UPHealth.diagProxy.UploadPdfDocumentRequest();
            inValue.data = data;
            inValue.fileName = fileName;
            UPHealth.diagProxy.UploadPdfDocumentResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).UploadPdfDocument(inValue);
            return retVal.UploadPdfDocumentResult;
        }
        
        public string CheckUpdates(string unit_id, string UpdatesInfo, string LastUpdate, string Database) {
            return base.Channel.CheckUpdates(unit_id, UpdatesInfo, LastUpdate, Database);
        }
        
        public string InterUnitCashTrf(string from_unit, string to_unit, decimal amount, string remarks, string unitType) {
            return base.Channel.InterUnitCashTrf(from_unit, to_unit, amount, remarks, unitType);
        }
        
        public System.Data.DataSet GetInterUnitCashTrfRecord(out string processInfo, string unit_id, string from, string to, string Logic) {
            return base.Channel.GetInterUnitCashTrfRecord(out processInfo, unit_id, from, to, Logic);
        }
        
        public System.Data.DataSet GetUnitToInterUnitCashTrf(out string processInfo, string unit_id, string division) {
            return base.Channel.GetUnitToInterUnitCashTrf(out processInfo, unit_id, division);
        }
        
        public System.Data.DataSet VD_PaymentReport(out string processInfo, string unit_id, string d_name, string from, string to, string paid) {
            return base.Channel.VD_PaymentReport(out processInfo, unit_id, d_name, from, to, paid);
        }
        
        public string InsertVisit(out string processInfo, string emp_code, string ref_code, string info, string sch_id, string sch_info, string Next_Sch_Date, string result, string refFeedBack, string vType) {
            return base.Channel.InsertVisit(out processInfo, emp_code, ref_code, info, sch_id, sch_info, Next_Sch_Date, result, refFeedBack, vType);
        }
        
        public System.Data.DataSet visitingDrInfo(out string processInfo, string unit_id, string logic, string i_code) {
            return base.Channel.visitingDrInfo(out processInfo, unit_id, logic, i_code);
        }
        
        public string InsCen_visitingDrFee(out string processInfo, string unit_id, string patient_id, string ref_name, int Fees, string i_code, string result) {
            return base.Channel.InsCen_visitingDrFee(out processInfo, unit_id, patient_id, ref_name, Fees, i_code, result);
        }
        
        public string Pay_CenVisitingDrFee(out string processInfo, string master_unit, string ref_name, int amount, string from, string to, string login_id, string patientStr) {
            return base.Channel.Pay_CenVisitingDrFee(out processInfo, master_unit, ref_name, amount, from, to, login_id, patientStr);
        }
        
        public string App_visitingDr(string unit_id, string logic, string i_code, string app_name, int app_fees, string app_timings, string app_contract, string login_id) {
            return base.Channel.App_visitingDr(unit_id, logic, i_code, app_name, app_fees, app_timings, app_contract, login_id);
        }
        
        public string VisitEntry_SMS(string visitorId, string pt_name, string pt_contact_no, string visit_date, string visit_time) {
            return base.Channel.VisitEntry_SMS(visitorId, pt_name, pt_contact_no, visit_date, visit_time);
        }
        
        public string HomeVisit_Messages(string unit_id, string visitorId, string VisitId, string pt_name, string pt_contact_no, string visit_date, string visit_time, string logic) {
            return base.Channel.HomeVisit_Messages(unit_id, visitorId, VisitId, pt_name, pt_contact_no, visit_date, visit_time, logic);
        }
        
        public System.Data.DataSet Visit_RelatedQueries(out string processInfo, string emp_code, string prm_1, string prm_2, string from, string to, string Logic) {
            return base.Channel.Visit_RelatedQueries(out processInfo, emp_code, prm_1, prm_2, from, to, Logic);
        }
        
        public string Insert_VisitInfo(out string processInfo, string sch_id, string emp_code, string ref_code, string sch_date, string remarks, string logic) {
            return base.Channel.Insert_VisitInfo(out processInfo, sch_id, emp_code, ref_code, sch_date, remarks, logic);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.createNewJobResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.createNewJob(UPHealth.diagProxy.createNewJobRequest request) {
            return base.Channel.createNewJob(request);
        }
        
        public string createNewJob(string subject, string Description, string assigned_by, string assigned_to, System.DateTime finish_date, string priority, string Comment, string Attachment, string FileName, string Location, byte[] data) {
            UPHealth.diagProxy.createNewJobRequest inValue = new UPHealth.diagProxy.createNewJobRequest();
            inValue.subject = subject;
            inValue.Description = Description;
            inValue.assigned_by = assigned_by;
            inValue.assigned_to = assigned_to;
            inValue.finish_date = finish_date;
            inValue.priority = priority;
            inValue.Comment = Comment;
            inValue.Attachment = Attachment;
            inValue.FileName = FileName;
            inValue.Location = Location;
            inValue.data = data;
            UPHealth.diagProxy.createNewJobResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).createNewJob(inValue);
            return retVal.createNewJobResult;
        }
        
        public string CalculateOldMonthlyPF(out string processInfo, string d_code, string from, string to) {
            return base.Channel.CalculateOldMonthlyPF(out processInfo, d_code, from, to);
        }
        
        public string SendDailyIncForApproval(out string processInfo, string ref_code, string patient_id, decimal total, decimal rebate, decimal received, string test_code) {
            return base.Channel.SendDailyIncForApproval(out processInfo, ref_code, patient_id, total, rebate, received, test_code);
        }
        
        public string ReCalculateDailyPf(string patient_id, string test_code) {
            return base.Channel.ReCalculateDailyPf(patient_id, test_code);
        }
        
        public System.Data.DataSet PFCalculatedList(out string processInfo, string logic, string unit_id, string ref_code) {
            return base.Channel.PFCalculatedList(out processInfo, logic, unit_id, ref_code);
        }
        
        public string CalculateMonthlyPF(out string processInfo, string d_code, string mthInfo) {
            return base.Channel.CalculateMonthlyPF(out processInfo, d_code, mthInfo);
        }
        
        public System.Data.DataSet SalesSummary(string comp_id, string f_date, string l_date, string Business) {
            return base.Channel.SalesSummary(comp_id, f_date, l_date, Business);
        }
        
        public System.Data.DataSet GetLabRateInfo(out string processInfo, string i_code, string login_id) {
            return base.Channel.GetLabRateInfo(out processInfo, i_code, login_id);
        }
        
        public System.Data.DataSet GetCourierInfo(out string processInfo, string unit_id) {
            return base.Channel.GetCourierInfo(out processInfo, unit_id);
        }
        
        public System.Data.DataSet GetRefLabReportInfo(out string processInfo, string unit_id, string from, string to) {
            return base.Channel.GetRefLabReportInfo(out processInfo, unit_id, from, to);
        }
        
        public string RegisterPatientofInterUnit(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result) {
            return base.Channel.RegisterPatientofInterUnit(unit_id, Patient_id, pay_date, pt_name, pt_age, agetype, pt_sex, ref_by, ref_name, test_code, rep_date, rep_time, RateList, LoginComp, dutyshift, loginid, result);
        }
        
        public string RegisterPatientByUnit(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result) {
            return base.Channel.RegisterPatientByUnit(unit_id, Patient_id, pay_date, pt_name, pt_age, agetype, pt_sex, ref_by, ref_name, test_code, rep_date, rep_time, RateList, LoginComp, dutyshift, loginid, result);
        }
        
        public System.Data.DataSet SyncData_Queries(out string processInfo, string unit_id, string logic, string table_name, string from, string to, string login_id) {
            return base.Channel.SyncData_Queries(out processInfo, unit_id, logic, table_name, from, to, login_id);
        }
        
        public string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo) {
            return base.Channel.ServiceCharges(out processInfo, unit_id, dFrom, dTo);
        }
        
        public System.Data.DataSet QueriesFromeDiagnostic(out string processInfo, string logic, string master_unit_id, string unit_id, string searchString, string prm_1, string prm_2, string prm_3, string login_id) {
            return base.Channel.QueriesFromeDiagnostic(out processInfo, logic, master_unit_id, unit_id, searchString, prm_1, prm_2, prm_3, login_id);
        }
        
        public System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no) {
            return base.Channel.InformToeDiagnostic(out processInfo, unit_id, revision_no);
        }
        
        public System.Data.DataSet InformToeDiagnostic_New(out string processInfo, string unit_id, string prm_1, int prm_2, string prm_3, string logic) {
            return base.Channel.InformToeDiagnostic_New(out processInfo, unit_id, prm_1, prm_2, prm_3, logic);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_LoginlegalInfoResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_LoginlegalInfo(UPHealth.diagProxy.GC_LoginlegalInfoRequest request) {
            return base.Channel.GC_LoginlegalInfo(request);
        }
        
        public string GC_LoginlegalInfo(string unit_id, string subject, string LType, string remarks, string attach_file, string login_id, byte[] data, out string processInfo) {
            UPHealth.diagProxy.GC_LoginlegalInfoRequest inValue = new UPHealth.diagProxy.GC_LoginlegalInfoRequest();
            inValue.unit_id = unit_id;
            inValue.subject = subject;
            inValue.LType = LType;
            inValue.remarks = remarks;
            inValue.attach_file = attach_file;
            inValue.login_id = login_id;
            inValue.data = data;
            UPHealth.diagProxy.GC_LoginlegalInfoResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_LoginlegalInfo(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_LoginlegalInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.gc_SalaryChartResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.gc_SalaryChart(UPHealth.diagProxy.gc_SalaryChartRequest request) {
            return base.Channel.gc_SalaryChart(request);
        }
        
        public byte[] gc_SalaryChart(string SalaryChartDate, string unit_id) {
            UPHealth.diagProxy.gc_SalaryChartRequest inValue = new UPHealth.diagProxy.gc_SalaryChartRequest();
            inValue.SalaryChartDate = SalaryChartDate;
            inValue.unit_id = unit_id;
            UPHealth.diagProxy.gc_SalaryChartResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).gc_SalaryChart(inValue);
            return retVal.gc_SalaryChartResult;
        }
        
        public System.Data.DataSet ImportContractDetail(out string processInfo, string d_code, string key, string Logic) {
            return base.Channel.ImportContractDetail(out processInfo, d_code, key, Logic);
        }
        
        public System.Data.DataSet ImportApprovedRateList(out string processInfo, string cont_id, string login_id) {
            return base.Channel.ImportApprovedRateList(out processInfo, cont_id, login_id);
        }
        
        public System.Data.DataSet GetContRateList(out string processInfo, string cont_name, string cont_Type) {
            return base.Channel.GetContRateList(out processInfo, cont_name, cont_Type);
        }
        
        public System.Data.DataSet ImportRebateApproval(out string processInfo, string unit_id, string Logic) {
            return base.Channel.ImportRebateApproval(out processInfo, unit_id, Logic);
        }
        
        public System.Data.DataSet Rebate_ApprovalQuerries(out string processInfo, string unit_id, string from, string to, string prm_1, string Logic) {
            return base.Channel.Rebate_ApprovalQuerries(out processInfo, unit_id, from, to, prm_1, Logic);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GetSalaryChartResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GetSalaryChart(UPHealth.diagProxy.GetSalaryChartRequest request) {
            return base.Channel.GetSalaryChart(request);
        }
        
        public byte[] GetSalaryChart(string SalaryChartDate, string CompCode, string Trainee, string ReportType) {
            UPHealth.diagProxy.GetSalaryChartRequest inValue = new UPHealth.diagProxy.GetSalaryChartRequest();
            inValue.SalaryChartDate = SalaryChartDate;
            inValue.CompCode = CompCode;
            inValue.Trainee = Trainee;
            inValue.ReportType = ReportType;
            UPHealth.diagProxy.GetSalaryChartResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GetSalaryChart(inValue);
            return retVal.GetSalaryChartResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GetIncreamentLetterResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GetIncreamentLetter(UPHealth.diagProxy.GetIncreamentLetterRequest request) {
            return base.Channel.GetIncreamentLetter(request);
        }
        
        public byte[] GetIncreamentLetter(string emp_code, string increament_date) {
            UPHealth.diagProxy.GetIncreamentLetterRequest inValue = new UPHealth.diagProxy.GetIncreamentLetterRequest();
            inValue.emp_code = emp_code;
            inValue.increament_date = increament_date;
            UPHealth.diagProxy.GetIncreamentLetterResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GetIncreamentLetter(inValue);
            return retVal.GetIncreamentLetterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_RegisterForFinesResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_RegisterForFines(UPHealth.diagProxy.GC_RegisterForFinesRequest request) {
            return base.Channel.GC_RegisterForFines(request);
        }
        
        public byte[] GC_RegisterForFines(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_RegisterForFinesRequest inValue = new UPHealth.diagProxy.GC_RegisterForFinesRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_RegisterForFinesResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_RegisterForFines(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_RegisterForFinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_RegisterForDeductionResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_RegisterForDeduction(UPHealth.diagProxy.GC_RegisterForDeductionRequest request) {
            return base.Channel.GC_RegisterForDeduction(request);
        }
        
        public byte[] GC_RegisterForDeduction(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_RegisterForDeductionRequest inValue = new UPHealth.diagProxy.GC_RegisterForDeductionRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_RegisterForDeductionResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_RegisterForDeduction(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_RegisterForDeductionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_OverTimeRegisterResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_OverTimeRegister(UPHealth.diagProxy.GC_OverTimeRegisterRequest request) {
            return base.Channel.GC_OverTimeRegister(request);
        }
        
        public byte[] GC_OverTimeRegister(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_OverTimeRegisterRequest inValue = new UPHealth.diagProxy.GC_OverTimeRegisterRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_OverTimeRegisterResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_OverTimeRegister(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_OverTimeRegisterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_WeekdayoffResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_Weekdayoff(UPHealth.diagProxy.GC_WeekdayoffRequest request) {
            return base.Channel.GC_Weekdayoff(request);
        }
        
        public byte[] GC_Weekdayoff(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_WeekdayoffRequest inValue = new UPHealth.diagProxy.GC_WeekdayoffRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_WeekdayoffResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_Weekdayoff(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_WeekdayoffResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_FormDRemunRuleResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_FormDRemunRule(UPHealth.diagProxy.GC_FormDRemunRuleRequest request) {
            return base.Channel.GC_FormDRemunRule(request);
        }
        
        public byte[] GC_FormDRemunRule(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_FormDRemunRuleRequest inValue = new UPHealth.diagProxy.GC_FormDRemunRuleRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_FormDRemunRuleResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_FormDRemunRule(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_FormDRemunRuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_NoticeOfChangesResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_NoticeOfChanges(UPHealth.diagProxy.GC_NoticeOfChangesRequest request) {
            return base.Channel.GC_NoticeOfChanges(request);
        }
        
        public byte[] GC_NoticeOfChanges(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_NoticeOfChangesRequest inValue = new UPHealth.diagProxy.GC_NoticeOfChangesRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_NoticeOfChangesResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_NoticeOfChanges(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_NoticeOfChangesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_NoticeOfChangesOfOtherStates(UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesRequest request) {
            return base.Channel.GC_NoticeOfChangesOfOtherStates(request);
        }
        
        public byte[] GC_NoticeOfChangesOfOtherStates(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesRequest inValue = new UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_NoticeOfChangesOfOtherStatesResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_NoticeOfChangesOfOtherStates(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_NoticeOfChangesOfOtherStatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_DamageOrLossResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_DamageOrLoss(UPHealth.diagProxy.GC_DamageOrLossRequest request) {
            return base.Channel.GC_DamageOrLoss(request);
        }
        
        public byte[] GC_DamageOrLoss(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_DamageOrLossRequest inValue = new UPHealth.diagProxy.GC_DamageOrLossRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_DamageOrLossResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_DamageOrLoss(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_DamageOrLossResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_AnualReturnResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_AnualReturn(UPHealth.diagProxy.GC_AnualReturnRequest request) {
            return base.Channel.GC_AnualReturn(request);
        }
        
        public byte[] GC_AnualReturn(string division, string CompCode, string unit_id, object date, string Logic, string login_id, out string processInfo) {
            UPHealth.diagProxy.GC_AnualReturnRequest inValue = new UPHealth.diagProxy.GC_AnualReturnRequest();
            inValue.division = division;
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.date = date;
            inValue.Logic = Logic;
            inValue.login_id = login_id;
            UPHealth.diagProxy.GC_AnualReturnResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_AnualReturn(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_AnualReturnResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_AttendenceRegisterOfUnitResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_AttendenceRegisterOfUnit(UPHealth.diagProxy.GC_AttendenceRegisterOfUnitRequest request) {
            return base.Channel.GC_AttendenceRegisterOfUnit(request);
        }
        
        public byte[] GC_AttendenceRegisterOfUnit(string CompCode, string unit_id, System.DateTime att_date, string login_id, string Logic, out string processInfo) {
            UPHealth.diagProxy.GC_AttendenceRegisterOfUnitRequest inValue = new UPHealth.diagProxy.GC_AttendenceRegisterOfUnitRequest();
            inValue.CompCode = CompCode;
            inValue.unit_id = unit_id;
            inValue.att_date = att_date;
            inValue.login_id = login_id;
            inValue.Logic = Logic;
            UPHealth.diagProxy.GC_AttendenceRegisterOfUnitResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_AttendenceRegisterOfUnit(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_AttendenceRegisterOfUnitResult;
        }
        
        public string GenerateBillingData(out string processInfo, string comp_code, string ref_code, string d_from, string d_to, string login_id, string pay_mode, string remark, string logic, string Bill_no) {
            return base.Channel.GenerateBillingData(out processInfo, comp_code, ref_code, d_from, d_to, login_id, pay_mode, remark, logic, Bill_no);
        }
        
        public string Pay_BalaceBill(string bill_no, string pay_mode, string pay_by, string remark, string UnTickPtIds) {
            return base.Channel.Pay_BalaceBill(bill_no, pay_mode, pay_by, remark, UnTickPtIds);
        }
        
        public System.Data.DataSet BillPaymentChecking(out string processInfo, string unit_id, string ref_by, string dFrom, string dTo, string checkbill) {
            return base.Channel.BillPaymentChecking(out processInfo, unit_id, ref_by, dFrom, dTo, checkbill);
        }
        
        public System.Data.DataSet GetRecivableRefList(out string processInfo, string emp_code, string logic, string from, string to) {
            return base.Channel.GetRecivableRefList(out processInfo, emp_code, logic, from, to);
        }
        
        public System.Data.DataSet BillingInfo(out string processInfo, string BillId, string Patient_id, string unit_id, string Logic) {
            return base.Channel.BillingInfo(out processInfo, BillId, Patient_id, unit_id, Logic);
        }
        
        public string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database) {
            return base.Channel.AuthenticateLogin(unit_id, login_id, password, accessFrom, systemId, database);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.CGHS_DocInsertResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.CGHS_DocInsert(UPHealth.diagProxy.CGHS_DocInsertRequest request) {
            return base.Channel.CGHS_DocInsert(request);
        }
        
        public string CGHS_DocInsert(string unit_id, string card_no, string patient_id, string logic, string login_id, byte[] data, string month, bool _tokenExist, out string processInfo) {
            UPHealth.diagProxy.CGHS_DocInsertRequest inValue = new UPHealth.diagProxy.CGHS_DocInsertRequest();
            inValue.unit_id = unit_id;
            inValue.card_no = card_no;
            inValue.patient_id = patient_id;
            inValue.logic = logic;
            inValue.login_id = login_id;
            inValue.data = data;
            inValue.month = month;
            inValue._tokenExist = _tokenExist;
            UPHealth.diagProxy.CGHS_DocInsertResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).CGHS_DocInsert(inValue);
            processInfo = retVal.processInfo;
            return retVal.CGHS_DocInsertResult;
        }
        
        public string QuestAuditAnswerIns(out string processInfo, string auditId, string unit_id, int HeadId, int Qno, string status_flag, string audit_remark, string login_id) {
            return base.Channel.QuestAuditAnswerIns(out processInfo, auditId, unit_id, HeadId, Qno, status_flag, audit_remark, login_id);
        }
        
        public string QuestAuditAnswerInsWithRating(out string processInfo, string auditId, string unit_id, int HeadId, int Qno, int rating, string status_flag, string audit_remark, string login_id) {
            return base.Channel.QuestAuditAnswerInsWithRating(out processInfo, auditId, unit_id, HeadId, Qno, rating, status_flag, audit_remark, login_id);
        }
        
        public System.Data.DataSet SampleTracking_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic) {
            return base.Channel.SampleTracking_Queries(out processInfo, unit_id, reg_no, prm_1, prm_2, from, to, Logic);
        }
        
        public string Insert_Modify_Report_CrossCheck(string Logic, System.Data.DataSet ds) {
            return base.Channel.Insert_Modify_Report_CrossCheck(Logic, ds);
        }
        
        public string GetSamplTrfSheetNo(out string processInfo, string unit_id) {
            return base.Channel.GetSamplTrfSheetNo(out processInfo, unit_id);
        }
        
        public System.Data.DataSet IssueProduct(string master_key, int qty, string unit_id, string mfdId, string allotedto) {
            return base.Channel.IssueProduct(master_key, qty, unit_id, mfdId, allotedto);
        }
        
        public string CreateOrderInfo(string unit_id, string Item_id, string login_id, string pack_size, decimal pack_qty, decimal Qty) {
            return base.Channel.CreateOrderInfo(unit_id, Item_id, login_id, pack_size, pack_qty, Qty);
        }
        
        public System.Data.DataSet GetUnitUpdationRecord(string unit_id, string login_id, string logic) {
            return base.Channel.GetUnitUpdationRecord(unit_id, login_id, logic);
        }
        
        public System.Data.DataSet Get_salesExeProDet(out string processInfo, string empCode, string dFrom, string dTo, string logic) {
            return base.Channel.Get_salesExeProDet(out processInfo, empCode, dFrom, dTo, logic);
        }
        
        public System.Data.DataSet SalesReport_01(out string processInfo, string emp_code, string from, string to, string logic) {
            return base.Channel.SalesReport_01(out processInfo, emp_code, from, to, logic);
        }
        
        public System.Data.DataSet GetSalesDetailForVP(out string processInfo, string unit_id, string empCode, string dFrom, string dTo, string ref_code, string logic) {
            return base.Channel.GetSalesDetailForVP(out processInfo, unit_id, empCode, dFrom, dTo, ref_code, logic);
        }
        
        public string Add_RefMultiLocality(string ref_code, string Ref_locality, string address, string prm_1, string loginid, string logic) {
            return base.Channel.Add_RefMultiLocality(ref_code, Ref_locality, address, prm_1, loginid, logic);
        }
        
        public string Insert_Modify_MeetingWithParty(out string processInfo, int auto_id, string emp_code, string party_name, string contact_no, string remark, string call_for, string call_type, string Logic) {
            return base.Channel.Insert_Modify_MeetingWithParty(out processInfo, auto_id, emp_code, party_name, contact_no, remark, call_for, call_type, Logic);
        }
        
        public string Insert_DiagContractApproval(string ref_code, string i_code, int app_rate, string cont_from, string cont_to, string app_flag, string logic, string login_id) {
            return base.Channel.Insert_DiagContractApproval(ref_code, i_code, app_rate, cont_from, cont_to, app_flag, logic, login_id);
        }
        
        public System.Data.DataSet SM_StatusBoard(out string processInfo, string logn_id, string date, string logic) {
            return base.Channel.SM_StatusBoard(out processInfo, logn_id, date, logic);
        }
        
        public string Insert_Modify_DiagTemporaryContract(string unit_id, string client_id, string I_CODE, int cont_rate, string Logic, string login_id) {
            return base.Channel.Insert_Modify_DiagTemporaryContract(unit_id, client_id, I_CODE, cont_rate, Logic, login_id);
        }
        
        public string ReferralRequestToModifyOrNew(
                    string d_code, 
                    string dname, 
                    string degree, 
                    string SPECIALITY, 
                    string D_O_B, 
                    string MRG_ANV, 
                    string c_name, 
                    string c_address, 
                    string c_landmark, 
                    string c_locality, 
                    string State, 
                    string c_city, 
                    string c_phone, 
                    string Mobile_No, 
                    string emp_code, 
                    decimal potential) {
            return base.Channel.ReferralRequestToModifyOrNew(d_code, dname, degree, SPECIALITY, D_O_B, MRG_ANV, c_name, c_address, c_landmark, c_locality, State, c_city, c_phone, Mobile_No, emp_code, potential);
        }
        
        public string Disttribute_MonthlyBySalesExecutive(string d_code, string dflag, string dFlagBy, string mobile_no, string for_month, decimal amount) {
            return base.Channel.Disttribute_MonthlyBySalesExecutive(d_code, dflag, dFlagBy, mobile_no, for_month, amount);
        }
        
        public string Disttribute_DailyBySalesExecutive(string d_code, string dflag, string dFlagBy, string mobile_no, string date, decimal amount) {
            return base.Channel.Disttribute_DailyBySalesExecutive(d_code, dflag, dFlagBy, mobile_no, date, amount);
        }
        
        public string CreateModifySpecialityAndDegree(string sp_code, string sp_name, string test_code, string logic, string login_id) {
            return base.Channel.CreateModifySpecialityAndDegree(sp_code, sp_name, test_code, logic, login_id);
        }
        
        public string InsertDoctorDegree(string code, string ref_degree, string login_id, string result) {
            return base.Channel.InsertDoctorDegree(code, ref_degree, login_id, result);
        }
        
        public string GetReffralInfobyDate(string from_date, string to_date, string emp_code) {
            return base.Channel.GetReffralInfobyDate(from_date, to_date, emp_code);
        }
        
        public System.Data.DataSet doctor() {
            return base.Channel.doctor();
        }
        
        public string CorrectLocalReferral(out string processInfo, string login_id, string unit_id, string refStr) {
            return base.Channel.CorrectLocalReferral(out processInfo, login_id, unit_id, refStr);
        }
        
        public System.Data.DataSet GetRefAndLedgerToSync(out string processInfo, string login_id, string unit_id, string logic, string strchar) {
            return base.Channel.GetRefAndLedgerToSync(out processInfo, login_id, unit_id, logic, strchar);
        }
        
        public System.Data.DataSet Referral_Queries_New(out string processInfo, string login_id, string emp_code, string prm_1, string from, string to, string logic) {
            return base.Channel.Referral_Queries_New(out processInfo, login_id, emp_code, prm_1, from, to, logic);
        }
        
        public System.Data.DataSet BranchDetail(out string processInfo, string from, string to, string prm1) {
            return base.Channel.BranchDetail(out processInfo, from, to, prm1);
        }
        
        public System.Data.DataSet DayBook(string unit_id, string date, string daybookcode, string oprator, string computer) {
            return base.Channel.DayBook(unit_id, date, daybookcode, oprator, computer);
        }
        
        public System.Data.DataSet GetSalesDataForVP(out string processInfo, string login_id, string logic, string from, string to) {
            return base.Channel.GetSalesDataForVP(out processInfo, login_id, logic, from, to);
        }
        
        public string DiagnosticSales(string dtFrom, string dtTo, string Business) {
            return base.Channel.DiagnosticSales(dtFrom, dtTo, Business);
        }
        
        public string GlobalUnitSales(string mUnit_id, string cMth, string dFrom, string dTo) {
            return base.Channel.GlobalUnitSales(mUnit_id, cMth, dFrom, dTo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.InsertRadiologyBMDECGImagesResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.InsertRadiologyBMDECGImages(UPHealth.diagProxy.InsertRadiologyBMDECGImagesRequest request) {
            return base.Channel.InsertRadiologyBMDECGImages(request);
        }
        
        public string InsertRadiologyBMDECGImages(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, string HeadName, byte[] data) {
            UPHealth.diagProxy.InsertRadiologyBMDECGImagesRequest inValue = new UPHealth.diagProxy.InsertRadiologyBMDECGImagesRequest();
            inValue.patient_id = patient_id;
            inValue.report_history = report_history;
            inValue.Investigation = Investigation;
            inValue.workTable = workTable;
            inValue.totalsize = totalsize;
            inValue.fileName = fileName;
            inValue.HeadName = HeadName;
            inValue.data = data;
            UPHealth.diagProxy.InsertRadiologyBMDECGImagesResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).InsertRadiologyBMDECGImages(inValue);
            return retVal.InsertRadiologyBMDECGImagesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.tr_RadiologyRegistrationResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.tr_RadiologyRegistration(UPHealth.diagProxy.tr_RadiologyRegistrationRequest request) {
            return base.Channel.tr_RadiologyRegistration(request);
        }
        
        public string tr_RadiologyRegistration(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, byte[] data) {
            UPHealth.diagProxy.tr_RadiologyRegistrationRequest inValue = new UPHealth.diagProxy.tr_RadiologyRegistrationRequest();
            inValue.patient_id = patient_id;
            inValue.report_history = report_history;
            inValue.Investigation = Investigation;
            inValue.workTable = workTable;
            inValue.totalsize = totalsize;
            inValue.fileName = fileName;
            inValue.data = data;
            UPHealth.diagProxy.tr_RadiologyRegistrationResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).tr_RadiologyRegistration(inValue);
            return retVal.tr_RadiologyRegistrationResult;
        }
        
        public System.Data.DataSet tr_getPatientId() {
            return base.Channel.tr_getPatientId();
        }
        
        public System.Data.DataSet tr_getRadiologyImages(string patientId, string workTable) {
            return base.Channel.tr_getRadiologyImages(patientId, workTable);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.tr_getImageDataResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.tr_getImageData(UPHealth.diagProxy.tr_getImageDataRequest request) {
            return base.Channel.tr_getImageData(request);
        }
        
        public byte[] tr_getImageData(string path, out string message) {
            UPHealth.diagProxy.tr_getImageDataRequest inValue = new UPHealth.diagProxy.tr_getImageDataRequest();
            inValue.path = path;
            UPHealth.diagProxy.tr_getImageDataResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).tr_getImageData(inValue);
            message = retVal.message;
            return retVal.tr_getImageDataResult;
        }
        
        public string TotalReceivable(string emp_code) {
            return base.Channel.TotalReceivable(emp_code);
        }
        
        public string[] CheckRefLabInfo(string unit_id, string table, string date, string login_id) {
            return base.Channel.CheckRefLabInfo(unit_id, table, date, login_id);
        }
        
        public string InsNewCourier(out string processInfo, string unit_id, string Courier_name, string Address, string Locality, string Landmark, string State, string District, string KeyPerson, string PhoneNo, string Remarks) {
            return base.Channel.InsNewCourier(out processInfo, unit_id, Courier_name, Address, Locality, Landmark, State, District, KeyPerson, PhoneNo, Remarks);
        }
        
        public string InsInToRefLabTrf(out string processInfo, string unit_id, string patient_id, string i_code, string lab_id, decimal rl_rate, string courier_id, string login_id) {
            return base.Channel.InsInToRefLabTrf(out processInfo, unit_id, patient_id, i_code, lab_id, rl_rate, courier_id, login_id);
        }
        
        public string GetRefLabTransferedInfo(out string processInfo, string unit_id, string from, string to) {
            return base.Channel.GetRefLabTransferedInfo(out processInfo, unit_id, from, to);
        }
        
        public string RefLabTestSetting(string I_code, string lab_id, decimal rate, string login_id) {
            return base.Channel.RefLabTestSetting(I_code, lab_id, rate, login_id);
        }
        
        public string InsNewRefLab(string LabId, string RefLab_name, string Address_1, string Address_2, string State, string District, string Contact_No, string Contact_Person, string Mobile_No) {
            return base.Channel.InsNewRefLab(LabId, RefLab_name, Address_1, Address_2, State, District, Contact_No, Contact_Person, Mobile_No);
        }
        
        public string ValidateCoupon(string unit_id, string i_code, string coupon_no, string patient_id, string prm_1, string logic) {
            return base.Channel.ValidateCoupon(unit_id, i_code, coupon_no, patient_id, prm_1, logic);
        }
        
        public System.Data.DataSet Referral_Queries(out string processInfo, string logic, string prm_1, string prm_2, string prm_3) {
            return base.Channel.Referral_Queries(out processInfo, logic, prm_1, prm_2, prm_3);
        }
        
        public string Insert_FocusedList(out string result, string Logic, string ref_code, string remark, string loginid, string prm1, string prm2, string emp_code) {
            return base.Channel.Insert_FocusedList(out result, Logic, ref_code, remark, loginid, prm1, prm2, emp_code);
        }
        
        public System.Data.DataSet DuesInfoByReferral(out string processInfo, string ref_code, string logic) {
            return base.Channel.DuesInfoByReferral(out processInfo, ref_code, logic);
        }
        
        public string Trf_Patient_InfoForRefLab(
                    string unit_id, 
                    string Patient_id, 
                    string pay_date, 
                    string pt_name, 
                    int pt_age, 
                    string agetype, 
                    string pt_sex, 
                    string ref_by, 
                    string ref_name, 
                    string test_code, 
                    string rep_date, 
                    string rep_time, 
                    string RateList, 
                    string LoginComp, 
                    string dutyshift, 
                    string loginid, 
                    string result) {
            return base.Channel.Trf_Patient_InfoForRefLab(unit_id, Patient_id, pay_date, pt_name, pt_age, agetype, pt_sex, ref_by, ref_name, test_code, rep_date, rep_time, RateList, LoginComp, dutyshift, loginid, result);
        }
        
        public System.Data.DataSet GetInterUnitTestRecords(string from, string to, string unit_id, string login_id, string logic) {
            return base.Channel.GetInterUnitTestRecords(from, to, unit_id, login_id, logic);
        }
        
        public string RateListUpdated_Log(out string processInfo, string updTable, string unit_id, string login_id) {
            return base.Channel.RateListUpdated_Log(out processInfo, updTable, unit_id, login_id);
        }
        
        public string GetManagerAccessUnit(string login_id) {
            return base.Channel.GetManagerAccessUnit(login_id);
        }
        
        public string InsRecvdInfo(string unit_id, string loginId, decimal amount, string remark, string dcodes_months) {
            return base.Channel.InsRecvdInfo(unit_id, loginId, amount, remark, dcodes_months);
        }
        
        public string Pay_DailyIncentive(string unit_id, string loginId, string patientIdsStr, decimal amount) {
            return base.Channel.Pay_DailyIncentive(unit_id, loginId, patientIdsStr, amount);
        }
        
        public System.Data.DataSet GetPfRecordsForPayment(out string processInfo, string unit_id, string login_id, string password) {
            return base.Channel.GetPfRecordsForPayment(out processInfo, unit_id, login_id, password);
        }
        
        public string MarkPayToReferral(string login_id, string d_codes, string mth_info, string refresh) {
            return base.Channel.MarkPayToReferral(login_id, d_codes, mth_info, refresh);
        }
        
        public System.Data.DataSet GetPaymentRecevingInfo(out string processInfo, string login_id, string from, string to) {
            return base.Channel.GetPaymentRecevingInfo(out processInfo, login_id, from, to);
        }
        
        public string CalculateDailyPfByUnit(string unit_id, string ref_by, string test_code, int totalcost, int rebate, int received, string unit_type, string ratelist, string ContRateList, string login_id) {
            return base.Channel.CalculateDailyPfByUnit(unit_id, ref_by, test_code, totalcost, rebate, received, unit_type, ratelist, ContRateList, login_id);
        }
        
        public string DailyPF_Messaging(string unit_id, string Login_Id) {
            return base.Channel.DailyPF_Messaging(unit_id, Login_Id);
        }
        
        public string ins_PF_Payment(string login_id, string d_code, string forMonth, decimal Amount, string remarks, string distType) {
            return base.Channel.ins_PF_Payment(login_id, d_code, forMonth, Amount, remarks, distType);
        }
        
        public string ins_PF_Receiving(string _loginid, System.DateTime _cr_date, decimal _amount, string _remarks, string _result, string dbName, string _distType) {
            return base.Channel.ins_PF_Receiving(_loginid, _cr_date, _amount, _remarks, _result, dbName, _distType);
        }
        
        public System.Data.DataSet inc_Slip_Records(out string processInfo, string d_code, string type, string login_id) {
            return base.Channel.inc_Slip_Records(out processInfo, d_code, type, login_id);
        }
        
        public System.Data.DataSet inc_CancelRefPayMark(out string processInfo, string emp_code, string d_code, string mth_info, string logic, string unit_id) {
            return base.Channel.inc_CancelRefPayMark(out processInfo, emp_code, d_code, mth_info, logic, unit_id);
        }
        
        public System.Data.DataSet inc_CancelRefPayMarkBulk(out string processInfo, string emp_code, string d_codes, string unit_id) {
            return base.Channel.inc_CancelRefPayMarkBulk(out processInfo, emp_code, d_codes, unit_id);
        }
        
        public System.Data.DataSet GetDailyPfReport(System.Data.DataSet ds, string unit_id) {
            return base.Channel.GetDailyPfReport(ds, unit_id);
        }
        
        public string CreateContract(string cont_id, string ContType, string cont_subject, string unit_id, string ref_code, string emp_code, System.DateTime cont_from, System.DateTime cont_to, string remarks, string ustatus, string Logic) {
            return base.Channel.CreateContract(cont_id, ContType, cont_subject, unit_id, ref_code, emp_code, cont_from, cont_to, remarks, ustatus, Logic);
        }
        
        public string ContractRate(string cont_id, string I_CODE, int rate, int cont_rate, int app_rate, string Logic) {
            return base.Channel.ContractRate(cont_id, I_CODE, rate, cont_rate, app_rate, Logic);
        }
        
        public string InsertRebateofDoctor(string cont_id, string[] rebType, string[] section, decimal[] rebate) {
            return base.Channel.InsertRebateofDoctor(cont_id, rebType, section, rebate);
        }
        
        public string DataSynchronization(System.Data.DataSet ds, string unit_id, string login_id, string logic) {
            return base.Channel.DataSynchronization(ds, unit_id, login_id, logic);
        }
        
        public string ProcessHealthCardData(string main_unit_id, string unit_id, string State, string City, string login_id) {
            return base.Channel.ProcessHealthCardData(main_unit_id, unit_id, State, City, login_id);
        }
        
        public string ProcessSyncData(string unit_id, string RecordType, string login_id) {
            return base.Channel.ProcessSyncData(unit_id, RecordType, login_id);
        }
        
        public string CurrentSaleSynchronisation(System.Data.DataSet ds, string unit_id, string login_id) {
            return base.Channel.CurrentSaleSynchronisation(ds, unit_id, login_id);
        }
        
        public string OnLineDataSynchronization(System.Data.DataSet ds, string unit_id) {
            return base.Channel.OnLineDataSynchronization(ds, unit_id);
        }
        
        public System.Data.DataSet InsertRecordMatchData(out string processInfo, System.Data.DataSet ds) {
            return base.Channel.InsertRecordMatchData(out processInfo, ds);
        }
        
        public string Insert_GetDailySalesInfo(out string processInfo, string unit_id, string reg_date, int RegNo, int FinNo, decimal total, decimal rebate, decimal received) {
            return base.Channel.Insert_GetDailySalesInfo(out processInfo, unit_id, reg_date, RegNo, FinNo, total, rebate, received);
        }
        
        public string GetPatientInfo(string unit_id, string Patint_id, string Info_Type) {
            return base.Channel.GetPatientInfo(unit_id, Patint_id, Info_Type);
        }
        
        public System.Data.DataSet VerifyCodesAndCost(out string processInfo, string master_unit_id, string ref_code, string card_no, string NewCard_Flag, string testCodes, string cardExists, string app_id, string promo_id, string prm_1) {
            return base.Channel.VerifyCodesAndCost(out processInfo, master_unit_id, ref_code, card_no, NewCard_Flag, testCodes, cardExists, app_id, promo_id, prm_1);
        }
        
        public System.Data.DataSet VerifyCodesAndCost_Central(out string processInfo, string master_unit_id, string ref_code, string card_no, string NewCard_Flag, string testCodes, string app_id, string promo_id, string prm_1) {
            return base.Channel.VerifyCodesAndCost_Central(out processInfo, master_unit_id, ref_code, card_no, NewCard_Flag, testCodes, app_id, promo_id, prm_1);
        }
        
        public string MarkDelayedReport(out string processInfo, string unit_id, string pend_date, string strPatientId, string pend_flag) {
            return base.Channel.MarkDelayedReport(out processInfo, unit_id, pend_date, strPatientId, pend_flag);
        }
        
        public string Insert_ReportComplaint(out string processInfo, string patient_id, string work_table, string remark, string login_id) {
            return base.Channel.Insert_ReportComplaint(out processInfo, patient_id, work_table, remark, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.PendingInfo_InsertResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.PendingInfo_Insert(UPHealth.diagProxy.PendingInfo_InsertRequest request) {
            return base.Channel.PendingInfo_Insert(request);
        }
        
        public string PendingInfo_Insert(string pend_date, string unit_id, int total_no, int PendingNo, string remark, byte[] fileData, out string processInfo) {
            UPHealth.diagProxy.PendingInfo_InsertRequest inValue = new UPHealth.diagProxy.PendingInfo_InsertRequest();
            inValue.pend_date = pend_date;
            inValue.unit_id = unit_id;
            inValue.total_no = total_no;
            inValue.PendingNo = PendingNo;
            inValue.remark = remark;
            inValue.fileData = fileData;
            UPHealth.diagProxy.PendingInfo_InsertResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).PendingInfo_Insert(inValue);
            processInfo = retVal.processInfo;
            return retVal.PendingInfo_InsertResult;
        }
        
        public string AnalysisWorkingTable_1(string param) {
            return base.Channel.AnalysisWorkingTable_1(param);
        }
        
        public string YearlySalesAnalysisForSalesExecutive(string ref_code) {
            return base.Channel.YearlySalesAnalysisForSalesExecutive(ref_code);
        }
        
        public System.Data.DataSet DivisonSales_New(out string processInfo, int mth, string from, string to, string prm_1, string prm_2, string Logic) {
            return base.Channel.DivisonSales_New(out processInfo, mth, from, to, prm_1, prm_2, Logic);
        }
        
        public string RevenueResourceAnalysis(string parameters) {
            return base.Channel.RevenueResourceAnalysis(parameters);
        }
        
        public string Insert_CustCardInfowithMember(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers) {
            return base.Channel.Insert_CustCardInfowithMember(labcode, card_no, member_id, m_type, cust_name, gender, dob, mobileno, area, Locality, district, state, email, pin, logic, dsmembers);
        }
        
        public string Insert_CustCardInfowithMemberNew(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers, 
                    string login_id) {
            return base.Channel.Insert_CustCardInfowithMemberNew(labcode, card_no, member_id, m_type, cust_name, gender, dob, mobileno, area, Locality, district, state, email, pin, logic, dsmembers, login_id);
        }
        
        public string Insert_UpdateCustCardMemebers(
                    string labcode, 
                    string card_no, 
                    string member_id, 
                    string m_type, 
                    string cust_name, 
                    string gender, 
                    string dob, 
                    string mobileno, 
                    string area, 
                    string Locality, 
                    string district, 
                    string state, 
                    string email, 
                    string pin, 
                    string logic, 
                    System.Data.DataSet dsmembers, 
                    string login_id) {
            return base.Channel.Insert_UpdateCustCardMemebers(labcode, card_no, member_id, m_type, cust_name, gender, dob, mobileno, area, Locality, district, state, email, pin, logic, dsmembers, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.CreateNewMailResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.CreateNewMail(UPHealth.diagProxy.CreateNewMailRequest request) {
            return base.Channel.CreateNewMail(request);
        }
        
        public string CreateNewMail(string loginId, string TowhomSent, string Subject, string Conversation, string strFilename, byte[] data, string eType) {
            UPHealth.diagProxy.CreateNewMailRequest inValue = new UPHealth.diagProxy.CreateNewMailRequest();
            inValue.loginId = loginId;
            inValue.TowhomSent = TowhomSent;
            inValue.Subject = Subject;
            inValue.Conversation = Conversation;
            inValue.strFilename = strFilename;
            inValue.data = data;
            inValue.eType = eType;
            UPHealth.diagProxy.CreateNewMailResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).CreateNewMail(inValue);
            return retVal.CreateNewMailResult;
        }
        
        public string TransferAppCancel(System.Data.DataSet ds) {
            return base.Channel.TransferAppCancel(ds);
        }
        
        public string Send_RebateApproval(System.Data.DataSet ds) {
            return base.Channel.Send_RebateApproval(ds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.Send_RebateApproval2Response UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.Send_RebateApproval2(UPHealth.diagProxy.Send_RebateApproval2Request request) {
            return base.Channel.Send_RebateApproval2(request);
        }
        
        public string Send_RebateApproval2(string app_id, string pt_name, string investigation, string reason, decimal cost, decimal rebate, decimal rebate_req, string login_id, string ref_code, string rebate_by, string file_path, byte[] data, out string processInfo) {
            UPHealth.diagProxy.Send_RebateApproval2Request inValue = new UPHealth.diagProxy.Send_RebateApproval2Request();
            inValue.app_id = app_id;
            inValue.pt_name = pt_name;
            inValue.investigation = investigation;
            inValue.reason = reason;
            inValue.cost = cost;
            inValue.rebate = rebate;
            inValue.rebate_req = rebate_req;
            inValue.login_id = login_id;
            inValue.ref_code = ref_code;
            inValue.rebate_by = rebate_by;
            inValue.file_path = file_path;
            inValue.data = data;
            UPHealth.diagProxy.Send_RebateApproval2Response retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).Send_RebateApproval2(inValue);
            processInfo = retVal.processInfo;
            return retVal.Send_RebateApproval2Result;
        }
        
        public System.Data.DataSet Check_RebateApproval(string unit_id) {
            return base.Channel.Check_RebateApproval(unit_id);
        }
        
        public System.Data.DataSet UpdateMyRateList(string unit_id) {
            return base.Channel.UpdateMyRateList(unit_id);
        }
        
        public System.Data.DataSet UpdateMyProfileMaster(string unit_id) {
            return base.Channel.UpdateMyProfileMaster(unit_id);
        }
        
        public System.Data.DataSet getCreditSummery(string employee_code, string Action) {
            return base.Channel.getCreditSummery(employee_code, Action);
        }
        
        public int getRebateApproval(string Patient_id) {
            return base.Channel.getRebateApproval(Patient_id);
        }
        
        public string Rebate_At_Source(string login_id, string Patient_id, string ref_code, decimal totalcost, decimal rebate, decimal received, decimal RebateAtSource) {
            return base.Channel.Rebate_At_Source(login_id, Patient_id, ref_code, totalcost, rebate, received, RebateAtSource);
        }
        
        public string NewRferralCoding(
                    string ref_name, 
                    string degree, 
                    string speciality, 
                    string d_o_b, 
                    string mrg_anv, 
                    string name, 
                    string address, 
                    string landmark, 
                    string locality, 
                    string state, 
                    string city, 
                    string phone, 
                    string mobile_no, 
                    string timings, 
                    string instruction, 
                    string exec_code, 
                    string localratelist) {
            return base.Channel.NewRferralCoding(ref_name, degree, speciality, d_o_b, mrg_anv, name, address, landmark, locality, state, city, phone, mobile_no, timings, instruction, exec_code, localratelist);
        }
        
        public System.Data.DataSet getMainAssetNoAtUnit(string UnitId) {
            return base.Channel.getMainAssetNoAtUnit(UnitId);
        }
        
        public System.Data.DataSet fillMainAsset() {
            return base.Channel.fillMainAsset();
        }
        
        public System.Data.DataSet fillSubAsset(string assetCategCode) {
            return base.Channel.fillSubAsset(assetCategCode);
        }
        
        public System.Data.DataSet fillMainAssetNoAtUnitAssetCatWise(string catCodeAndUnitId) {
            return base.Channel.fillMainAssetNoAtUnitAssetCatWise(catCodeAndUnitId);
        }
        
        public System.Data.DataSet getAssetDetByEqpNo(string EqNo, string unitId) {
            return base.Channel.getAssetDetByEqpNo(EqNo, unitId);
        }
        
        public string insertIntoComplaints(string unitId, string loginId, string eqNo, string Compalint) {
            return base.Channel.insertIntoComplaints(unitId, loginId, eqNo, Compalint);
        }
        
        public System.Data.DataSet getAssetAndSubAsset(string mainEqNo) {
            return base.Channel.getAssetAndSubAsset(mainEqNo);
        }
        
        public System.Data.DataSet getSubAssetByCatCode(string mainEqNo) {
            return base.Channel.getSubAssetByCatCode(mainEqNo);
        }
        
        public System.Data.DataSet getAssetNoToAttach(string eqCat, string eqCode, string unitId) {
            return base.Channel.getAssetNoToAttach(eqCat, eqCode, unitId);
        }
        
        public string attachAssetToMainAsset(int autoId, string mainEqNo, string eqNo) {
            return base.Channel.attachAssetToMainAsset(autoId, mainEqNo, eqNo);
        }
        
        public System.Data.DataSet getComplaintCommunication(string EqNo) {
            return base.Channel.getComplaintCommunication(EqNo);
        }
        
        public string insertComplaintCommunication(string complCode, string loginId, string remarks) {
            return base.Channel.insertComplaintCommunication(complCode, loginId, remarks);
        }
        
        public string closeComplaint(string unitId, string eqNo) {
            return base.Channel.closeComplaint(unitId, eqNo);
        }
        
        public System.Data.DataSet getRepairedAssetDet(string eqNo, string unitId) {
            return base.Channel.getRepairedAssetDet(eqNo, unitId);
        }
        
        public string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date, decimal dpr_value) {
            return base.Channel.TransferAsset(out processInfo, trfFrom, trfTo, emp_code, eq_no, trfType, trf_date, dpr_value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.AssetTransferReportResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.AssetTransferReport(UPHealth.diagProxy.AssetTransferReportRequest request) {
            return base.Channel.AssetTransferReport(request);
        }
        
        public byte[] AssetTransferReport(string AutoId) {
            UPHealth.diagProxy.AssetTransferReportRequest inValue = new UPHealth.diagProxy.AssetTransferReportRequest();
            inValue.AutoId = AutoId;
            UPHealth.diagProxy.AssetTransferReportResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).AssetTransferReport(inValue);
            return retVal.AssetTransferReportResult;
        }
        
        public string InsertCaliberationData(
                    out string processInfo, 
                    string Unit_Code, 
                    int OperatoID, 
                    int InstrumentID, 
                    int TestID, 
                    decimal ReagentBlankABS, 
                    decimal SampleVolume, 
                    decimal ReagentVolume, 
                    decimal CalStABS, 
                    decimal CalStValue, 
                    decimal Factor, 
                    string KitCmpName, 
                    string BatchNo, 
                    string OpenDateKit, 
                    int TotalTest, 
                    string CurDate, 
                    string Kitsize, 
                    string Rvalue, 
                    int control_id, 
                    decimal control_value, 
                    string control_batch_no, 
                    string Branch) {
            return base.Channel.InsertCaliberationData(out processInfo, Unit_Code, OperatoID, InstrumentID, TestID, ReagentBlankABS, SampleVolume, ReagentVolume, CalStABS, CalStValue, Factor, KitCmpName, BatchNo, OpenDateKit, TotalTest, CurDate, Kitsize, Rvalue, control_id, control_value, control_batch_no, Branch);
        }
        
        public string SubscribeComplaint(out string processInfo, string unit_id, string patient_id, string subject, string complaint, string compl_By, string compl_contNo, string compl_email, string login_id, string result) {
            return base.Channel.SubscribeComplaint(out processInfo, unit_id, patient_id, subject, complaint, compl_By, compl_contNo, compl_email, login_id, result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.SuscribeComplaintDetailResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.SuscribeComplaintDetail(UPHealth.diagProxy.SuscribeComplaintDetailRequest request) {
            return base.Channel.SuscribeComplaintDetail(request);
        }
        
        public string SuscribeComplaintDetail(string compl_id, string extension, string remark, byte[] data, string login_id, string result, out string processInfo) {
            UPHealth.diagProxy.SuscribeComplaintDetailRequest inValue = new UPHealth.diagProxy.SuscribeComplaintDetailRequest();
            inValue.compl_id = compl_id;
            inValue.extension = extension;
            inValue.remark = remark;
            inValue.data = data;
            inValue.login_id = login_id;
            inValue.result = result;
            UPHealth.diagProxy.SuscribeComplaintDetailResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).SuscribeComplaintDetail(inValue);
            processInfo = retVal.processInfo;
            return retVal.SuscribeComplaintDetailResult;
        }
        
        public System.Data.DataSet Quality_Querries(out string processInfo, string compl_id, string unit_id, string from, string to, string prm_1, string Logic) {
            return base.Channel.Quality_Querries(out processInfo, compl_id, unit_id, from, to, prm_1, Logic);
        }
        
        public string SaveRefRemark(out string processInfo, string ref_code, string remark, string login_id) {
            return base.Channel.SaveRefRemark(out processInfo, ref_code, remark, login_id);
        }
        
        public System.Data.DataSet GetDoctorForCall(out string processInfo, string prm, string Logic) {
            return base.Channel.GetDoctorForCall(out processInfo, prm, Logic);
        }
        
        public System.Data.DataSet GetCustomerData(out string processInfo, string card_no, string division) {
            return base.Channel.GetCustomerData(out processInfo, card_no, division);
        }
        
        public System.Data.DataSet do_ServiceCalls(out string processInfo, string unit_id, string from, string to, string IsCard, string login_id, string database) {
            return base.Channel.do_ServiceCalls(out processInfo, unit_id, from, to, IsCard, login_id, database);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.DownLoadFileResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.DownLoadFile(UPHealth.diagProxy.DownLoadFileRequest request) {
            return base.Channel.DownLoadFile(request);
        }
        
        public byte[] DownLoadFile(string file_path) {
            UPHealth.diagProxy.DownLoadFileRequest inValue = new UPHealth.diagProxy.DownLoadFileRequest();
            inValue.file_path = file_path;
            UPHealth.diagProxy.DownLoadFileResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).DownLoadFile(inValue);
            return retVal.DownLoadFileResult;
        }
        
        public void SaveErrorLog(string unitId, string DatabaseName, string errorLog) {
            base.Channel.SaveErrorLog(unitId, DatabaseName, errorLog);
        }
        
        public string updateSaleSummary(string param) {
            return base.Channel.updateSaleSummary(param);
        }
        
        public string GC_NewCompliance(out string processInfo, string unit_id, int div_id, string reg_no, string machineId, string valid_upto, string comp_id, string remarks) {
            return base.Channel.GC_NewCompliance(out processInfo, unit_id, div_id, reg_no, machineId, valid_upto, comp_id, remarks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UPHealth.diagProxy.GC_InsDocInfoResponse UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap.GC_InsDocInfo(UPHealth.diagProxy.GC_InsDocInfoRequest request) {
            return base.Channel.GC_InsDocInfo(request);
        }
        
        public string GC_InsDocInfo(string UID, string div_name, string fileName, string doc_remark, string doc_id, byte[] data, out string processInfo) {
            UPHealth.diagProxy.GC_InsDocInfoRequest inValue = new UPHealth.diagProxy.GC_InsDocInfoRequest();
            inValue.UID = UID;
            inValue.div_name = div_name;
            inValue.fileName = fileName;
            inValue.doc_remark = doc_remark;
            inValue.doc_id = doc_id;
            inValue.data = data;
            UPHealth.diagProxy.GC_InsDocInfoResponse retVal = ((UPHealth.diagProxy.Diagnostic_CS_WebServiceSoap)(this)).GC_InsDocInfo(inValue);
            processInfo = retVal.processInfo;
            return retVal.GC_InsDocInfoResult;
        }
        
        public string GC_AddEmployee(out string processInfo, string UID, string emp_code) {
            return base.Channel.GC_AddEmployee(out processInfo, UID, emp_code);
        }
        
        public string Insert_Modify_panalty_master(int auto_id, string emp_code, string unit_id, string panalty_type, string reason, string login_id, int amount, string Logic) {
            return base.Channel.Insert_Modify_panalty_master(auto_id, emp_code, unit_id, panalty_type, reason, login_id, amount, Logic);
        }
        
        public System.Data.DataSet GetMarketingStaff(out string processInfo, string login_id) {
            return base.Channel.GetMarketingStaff(out processInfo, login_id);
        }
        
        public System.Data.DataSet My_Staff_Responsibility(out string processInfo, string emp_code, string inp_date) {
            return base.Channel.My_Staff_Responsibility(out processInfo, emp_code, inp_date);
        }
        
        public System.Data.DataSet MarkIndvAttandence(out string processInfo, string empCode, string dateOfB) {
            return base.Channel.MarkIndvAttandence(out processInfo, empCode, dateOfB);
        }
        
        public System.Data.DataSet GetMyStaff(string emp_code) {
            return base.Channel.GetMyStaff(emp_code);
        }
        
        public System.Data.DataSet SingleAttendanceChecking(out string processInfo, string emp_code, string from, string to) {
            return base.Channel.SingleAttendanceChecking(out processInfo, emp_code, from, to);
        }
        
        public string AttendanceMarkingByDate(string parameter, string pMcode) {
            return base.Channel.AttendanceMarkingByDate(parameter, pMcode);
        }
        
        public string MarkOff_ArTime(string emp_id, string logic, string value, string refreshValue) {
            return base.Channel.MarkOff_ArTime(emp_id, logic, value, refreshValue);
        }
        
        public System.Data.DataSet MyStaff(string emp_code) {
            return base.Channel.MyStaff(emp_code);
        }
        
        public void EmpInfoChangeByManager(string emp_code, string marital_status, string faimlyInfo, string mobileno, string reptime, string weeklyoff, string email, string logic, string RequestType) {
            base.Channel.EmpInfoChangeByManager(emp_code, marital_status, faimlyInfo, mobileno, reptime, weeklyoff, email, logic, RequestType);
        }
        
        public System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode) {
            return base.Channel.GetSalarySlipInfo(Unit_Id, Login_id, salDate, empcode);
        }
        
        public System.Data.DataSet GetPayableSalaryInfo(string emp_code, string login_id) {
            return base.Channel.GetPayableSalaryInfo(emp_code, login_id);
        }
        
        public string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id) {
            return base.Channel.UpdateSalaryPaymentInfo(emp_code, trf_date, payMode, unit_id, login_id);
        }
        
        public string UpdateSalaryPaymentInfo_New(string emp_code, string trf_date, string payMode, string unit_id, string login_id) {
            return base.Channel.UpdateSalaryPaymentInfo_New(emp_code, trf_date, payMode, unit_id, login_id);
        }
        
        public string InsAdvanceSalayInfo(string unit_id, string emp_code, decimal adv_amount, string login_id, string reason) {
            return base.Channel.InsAdvanceSalayInfo(unit_id, emp_code, adv_amount, login_id, reason);
        }
        
        public string Insert_Leave_Info(string unit_id, string emp_code, string T_O_L, string Frm_Date, string To_Date, string Mgr_Code, string Remarks) {
            return base.Channel.Insert_Leave_Info(unit_id, emp_code, T_O_L, Frm_Date, To_Date, Mgr_Code, Remarks);
        }
        
        public System.Data.DataSet GetTrfdSalInfoByMgr(string empcode, string dt) {
            return base.Channel.GetTrfdSalInfoByMgr(empcode, dt);
        }
        
        public System.Data.DataSet ReimbursementInfo(string work, string unit_id, string emp_code, string login_id, string remarks, string refresh) {
            return base.Channel.ReimbursementInfo(work, unit_id, emp_code, login_id, remarks, refresh);
        }
        
        public System.Data.DataSet GetReimbursementReport(string date, string login_id) {
            return base.Channel.GetReimbursementReport(date, login_id);
        }
        
        public string ChangePassword(string empCode, string oldPass, string newPass) {
            return base.Channel.ChangePassword(empCode, oldPass, newPass);
        }
        
        public System.Data.DataSet AttendanceSheetoftheday(out string processInfo, string unit_id, string login_id) {
            return base.Channel.AttendanceSheetoftheday(out processInfo, unit_id, login_id);
        }
        
        public System.Data.DataSet SearchStaff(string key, string CompCode) {
            return base.Channel.SearchStaff(key, CompCode);
        }
        
        public System.Data.DataSet AdvSalayInfo(out string processInfo, string mgr_code, string emp_code, string Logic) {
            return base.Channel.AdvSalayInfo(out processInfo, mgr_code, emp_code, Logic);
        }
        
        public System.Data.DataSet Transfer_idCheckingInfo(out string processInfo, string unit_id, string trf_id, string from, string to, string logic) {
            return base.Channel.Transfer_idCheckingInfo(out processInfo, unit_id, trf_id, from, to, logic);
        }
        
        public string receiveInStock(string master_key, string trf_id, int qty, int rcpt_qty, string loginid) {
            return base.Channel.receiveInStock(master_key, trf_id, qty, rcpt_qty, loginid);
        }
        
        public System.Data.DataSet getListofTransferedItem(string unit_id, string trf_id, int receiptcode) {
            return base.Channel.getListofTransferedItem(unit_id, trf_id, receiptcode);
        }
        
        public System.Data.DataSet stockAtUnit(string unit_id, string comp_code) {
            return base.Channel.stockAtUnit(unit_id, comp_code);
        }
        
        public System.Data.DataSet GetProductHistory(string unit_id, string item_id, string from_date, string to_date) {
            return base.Channel.GetProductHistory(unit_id, item_id, from_date, to_date);
        }
        
        public System.Data.DataSet GetLatestPackSizeWithPendingOrder(string unit_id, string item_id, string login_id) {
            return base.Channel.GetLatestPackSizeWithPendingOrder(unit_id, item_id, login_id);
        }
        
        public System.Data.DataSet GetUnProcessedOrder(out string processInfo, string unit_id) {
            return base.Channel.GetUnProcessedOrder(out processInfo, unit_id);
        }
        
        public System.Data.DataSet GetOrderRawData(out string processInfo, string unit_id, string from, string to) {
            return base.Channel.GetOrderRawData(out processInfo, unit_id, from, to);
        }
        
        public System.Data.DataSet SearchProductofUnit(out string processInfo, string unit_id, string searchString) {
            return base.Channel.SearchProductofUnit(out processInfo, unit_id, searchString);
        }
        
        public System.Data.DataSet TrackUnitItem(out string processInfo, string item_id, string unit_id) {
            return base.Channel.TrackUnitItem(out processInfo, item_id, unit_id);
        }
        
        public string Audit_Info(string userType, string workType, string login_id, string item_id, string remark) {
            return base.Channel.Audit_Info(userType, workType, login_id, item_id, remark);
        }
        
        public System.Data.DataSet GetIssuedRecToUpdate(out string processInfo, string unit_id, string item_id, string from, string to) {
            return base.Channel.GetIssuedRecToUpdate(out processInfo, unit_id, item_id, from, to);
        }
        
        public string DeleteIssuedItems(int auto_id) {
            return base.Channel.DeleteIssuedItems(auto_id);
        }
        
        public string Delete_TransferProduct(string auto_id, string fromorder) {
            return base.Channel.Delete_TransferProduct(auto_id, fromorder);
        }
        
        public string CompleteTransfer(string trf_id) {
            return base.Channel.CompleteTransfer(trf_id);
        }
        
        public System.Data.DataSet getProductIdentity(string item_id, string unit_id, string comp_code) {
            return base.Channel.getProductIdentity(item_id, unit_id, comp_code);
        }
        
        public string TransferStocks(string[] t1) {
            return base.Channel.TransferStocks(t1);
        }
        
        public System.Data.DataSet GoodsReturnRec(out string processInfo, string trf_id, string unit_id) {
            return base.Channel.GoodsReturnRec(out processInfo, trf_id, unit_id);
        }
        
        public System.Data.DataSet ProductSearchToSale(string item_name, string unit_id) {
            return base.Channel.ProductSearchToSale(item_name, unit_id);
        }
        
        public System.Data.DataSet getProductDetail(string item_id, string unit_id) {
            return base.Channel.getProductDetail(item_id, unit_id);
        }
    }
}
